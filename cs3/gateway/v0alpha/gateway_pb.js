// source: cs3/gateway/v0alpha/gateway.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var cs3_appregistry_v0alpha_appregistry_pb = require('../../../cs3/appregistry/v0alpha/appregistry_pb.js');
goog.object.extend(proto, cs3_appregistry_v0alpha_appregistry_pb);
var cs3_authprovider_v0alpha_authprovider_pb = require('../../../cs3/authprovider/v0alpha/authprovider_pb.js');
goog.object.extend(proto, cs3_authprovider_v0alpha_authprovider_pb);
var cs3_authregistry_v0alpha_authregistry_pb = require('../../../cs3/authregistry/v0alpha/authregistry_pb.js');
goog.object.extend(proto, cs3_authregistry_v0alpha_authregistry_pb);
var cs3_ocmshareprovider_v0alpha_ocmshareprovider_pb = require('../../../cs3/ocmshareprovider/v0alpha/ocmshareprovider_pb.js');
goog.object.extend(proto, cs3_ocmshareprovider_v0alpha_ocmshareprovider_pb);
var cs3_preferences_v0alpha_preferences_pb = require('../../../cs3/preferences/v0alpha/preferences_pb.js');
goog.object.extend(proto, cs3_preferences_v0alpha_preferences_pb);
var cs3_publicshareprovider_v0alpha_publicshareprovider_pb = require('../../../cs3/publicshareprovider/v0alpha/publicshareprovider_pb.js');
goog.object.extend(proto, cs3_publicshareprovider_v0alpha_publicshareprovider_pb);
var cs3_rpc_status_pb = require('../../../cs3/rpc/status_pb.js');
goog.object.extend(proto, cs3_rpc_status_pb);
var cs3_storageprovider_v0alpha_resources_pb = require('../../../cs3/storageprovider/v0alpha/resources_pb.js');
goog.object.extend(proto, cs3_storageprovider_v0alpha_resources_pb);
var cs3_storageprovider_v0alpha_storageprovider_pb = require('../../../cs3/storageprovider/v0alpha/storageprovider_pb.js');
goog.object.extend(proto, cs3_storageprovider_v0alpha_storageprovider_pb);
var cs3_types_types_pb = require('../../../cs3/types/types_pb.js');
goog.object.extend(proto, cs3_types_types_pb);
var cs3_userprovider_v0alpha_userprovider_pb = require('../../../cs3/userprovider/v0alpha/userprovider_pb.js');
goog.object.extend(proto, cs3_userprovider_v0alpha_userprovider_pb);
var cs3_usershareprovider_v0alpha_usershareprovider_pb = require('../../../cs3/usershareprovider/v0alpha/usershareprovider_pb.js');
goog.object.extend(proto, cs3_usershareprovider_v0alpha_usershareprovider_pb);
goog.exportSymbol('proto.cs3.gatewayv0alpha.GenerateAccessTokenRequest', null, global);
goog.exportSymbol('proto.cs3.gatewayv0alpha.GetQuotaRequest', null, global);
goog.exportSymbol('proto.cs3.gatewayv0alpha.InitiateFileDownloadResponse', null, global);
goog.exportSymbol('proto.cs3.gatewayv0alpha.InitiateFileUploadResponse', null, global);
goog.exportSymbol('proto.cs3.gatewayv0alpha.ListAuthProvidersResponse', null, global);
goog.exportSymbol('proto.cs3.gatewayv0alpha.ListRecycleRequest', null, global);
goog.exportSymbol('proto.cs3.gatewayv0alpha.ListRecycleStreamRequest', null, global);
goog.exportSymbol('proto.cs3.gatewayv0alpha.PurgeRecycleRequest', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cs3.gatewayv0alpha.GenerateAccessTokenRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cs3.gatewayv0alpha.GenerateAccessTokenRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cs3.gatewayv0alpha.GenerateAccessTokenRequest.displayName = 'proto.cs3.gatewayv0alpha.GenerateAccessTokenRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cs3.gatewayv0alpha.GetQuotaRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cs3.gatewayv0alpha.GetQuotaRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cs3.gatewayv0alpha.GetQuotaRequest.displayName = 'proto.cs3.gatewayv0alpha.GetQuotaRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cs3.gatewayv0alpha.ListRecycleRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cs3.gatewayv0alpha.ListRecycleRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cs3.gatewayv0alpha.ListRecycleRequest.displayName = 'proto.cs3.gatewayv0alpha.ListRecycleRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cs3.gatewayv0alpha.ListRecycleStreamRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cs3.gatewayv0alpha.ListRecycleStreamRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cs3.gatewayv0alpha.ListRecycleStreamRequest.displayName = 'proto.cs3.gatewayv0alpha.ListRecycleStreamRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cs3.gatewayv0alpha.PurgeRecycleRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cs3.gatewayv0alpha.PurgeRecycleRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cs3.gatewayv0alpha.PurgeRecycleRequest.displayName = 'proto.cs3.gatewayv0alpha.PurgeRecycleRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cs3.gatewayv0alpha.InitiateFileDownloadResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cs3.gatewayv0alpha.InitiateFileDownloadResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cs3.gatewayv0alpha.InitiateFileDownloadResponse.displayName = 'proto.cs3.gatewayv0alpha.InitiateFileDownloadResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cs3.gatewayv0alpha.InitiateFileUploadResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cs3.gatewayv0alpha.InitiateFileUploadResponse.repeatedFields_, null);
};
goog.inherits(proto.cs3.gatewayv0alpha.InitiateFileUploadResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cs3.gatewayv0alpha.InitiateFileUploadResponse.displayName = 'proto.cs3.gatewayv0alpha.InitiateFileUploadResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cs3.gatewayv0alpha.ListAuthProvidersResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cs3.gatewayv0alpha.ListAuthProvidersResponse.repeatedFields_, null);
};
goog.inherits(proto.cs3.gatewayv0alpha.ListAuthProvidersResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cs3.gatewayv0alpha.ListAuthProvidersResponse.displayName = 'proto.cs3.gatewayv0alpha.ListAuthProvidersResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cs3.gatewayv0alpha.GenerateAccessTokenRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cs3.gatewayv0alpha.GenerateAccessTokenRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cs3.gatewayv0alpha.GenerateAccessTokenRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cs3.gatewayv0alpha.GenerateAccessTokenRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: jspb.Message.getFieldWithDefault(msg, 1, ""),
    clientId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    clientSecret: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cs3.gatewayv0alpha.GenerateAccessTokenRequest}
 */
proto.cs3.gatewayv0alpha.GenerateAccessTokenRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cs3.gatewayv0alpha.GenerateAccessTokenRequest;
  return proto.cs3.gatewayv0alpha.GenerateAccessTokenRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cs3.gatewayv0alpha.GenerateAccessTokenRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cs3.gatewayv0alpha.GenerateAccessTokenRequest}
 */
proto.cs3.gatewayv0alpha.GenerateAccessTokenRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setType(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setClientId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setClientSecret(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cs3.gatewayv0alpha.GenerateAccessTokenRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cs3.gatewayv0alpha.GenerateAccessTokenRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cs3.gatewayv0alpha.GenerateAccessTokenRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cs3.gatewayv0alpha.GenerateAccessTokenRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getType();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getClientId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getClientSecret();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string type = 1;
 * @return {string}
 */
proto.cs3.gatewayv0alpha.GenerateAccessTokenRequest.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.cs3.gatewayv0alpha.GenerateAccessTokenRequest.prototype.setType = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string client_id = 2;
 * @return {string}
 */
proto.cs3.gatewayv0alpha.GenerateAccessTokenRequest.prototype.getClientId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.cs3.gatewayv0alpha.GenerateAccessTokenRequest.prototype.setClientId = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string client_secret = 3;
 * @return {string}
 */
proto.cs3.gatewayv0alpha.GenerateAccessTokenRequest.prototype.getClientSecret = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.cs3.gatewayv0alpha.GenerateAccessTokenRequest.prototype.setClientSecret = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cs3.gatewayv0alpha.GetQuotaRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cs3.gatewayv0alpha.GetQuotaRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cs3.gatewayv0alpha.GetQuotaRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cs3.gatewayv0alpha.GetQuotaRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    opaque: (f = msg.getOpaque()) && cs3_types_types_pb.Opaque.toObject(includeInstance, f),
    ref: (f = msg.getRef()) && cs3_storageprovider_v0alpha_resources_pb.Reference.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cs3.gatewayv0alpha.GetQuotaRequest}
 */
proto.cs3.gatewayv0alpha.GetQuotaRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cs3.gatewayv0alpha.GetQuotaRequest;
  return proto.cs3.gatewayv0alpha.GetQuotaRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cs3.gatewayv0alpha.GetQuotaRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cs3.gatewayv0alpha.GetQuotaRequest}
 */
proto.cs3.gatewayv0alpha.GetQuotaRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new cs3_types_types_pb.Opaque;
      reader.readMessage(value,cs3_types_types_pb.Opaque.deserializeBinaryFromReader);
      msg.setOpaque(value);
      break;
    case 2:
      var value = new cs3_storageprovider_v0alpha_resources_pb.Reference;
      reader.readMessage(value,cs3_storageprovider_v0alpha_resources_pb.Reference.deserializeBinaryFromReader);
      msg.setRef(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cs3.gatewayv0alpha.GetQuotaRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cs3.gatewayv0alpha.GetQuotaRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cs3.gatewayv0alpha.GetQuotaRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cs3.gatewayv0alpha.GetQuotaRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOpaque();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      cs3_types_types_pb.Opaque.serializeBinaryToWriter
    );
  }
  f = message.getRef();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      cs3_storageprovider_v0alpha_resources_pb.Reference.serializeBinaryToWriter
    );
  }
};


/**
 * optional cs3.types.Opaque opaque = 1;
 * @return {?proto.cs3.types.Opaque}
 */
proto.cs3.gatewayv0alpha.GetQuotaRequest.prototype.getOpaque = function() {
  return /** @type{?proto.cs3.types.Opaque} */ (
    jspb.Message.getWrapperField(this, cs3_types_types_pb.Opaque, 1));
};


/** @param {?proto.cs3.types.Opaque|undefined} value */
proto.cs3.gatewayv0alpha.GetQuotaRequest.prototype.setOpaque = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.cs3.gatewayv0alpha.GetQuotaRequest.prototype.clearOpaque = function() {
  this.setOpaque(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cs3.gatewayv0alpha.GetQuotaRequest.prototype.hasOpaque = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional cs3.storageproviderv0alpha.Reference ref = 2;
 * @return {?proto.cs3.storageproviderv0alpha.Reference}
 */
proto.cs3.gatewayv0alpha.GetQuotaRequest.prototype.getRef = function() {
  return /** @type{?proto.cs3.storageproviderv0alpha.Reference} */ (
    jspb.Message.getWrapperField(this, cs3_storageprovider_v0alpha_resources_pb.Reference, 2));
};


/** @param {?proto.cs3.storageproviderv0alpha.Reference|undefined} value */
proto.cs3.gatewayv0alpha.GetQuotaRequest.prototype.setRef = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.cs3.gatewayv0alpha.GetQuotaRequest.prototype.clearRef = function() {
  this.setRef(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cs3.gatewayv0alpha.GetQuotaRequest.prototype.hasRef = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cs3.gatewayv0alpha.ListRecycleRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cs3.gatewayv0alpha.ListRecycleRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cs3.gatewayv0alpha.ListRecycleRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cs3.gatewayv0alpha.ListRecycleRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    opaque: (f = msg.getOpaque()) && cs3_types_types_pb.Opaque.toObject(includeInstance, f),
    ref: (f = msg.getRef()) && cs3_storageprovider_v0alpha_resources_pb.Reference.toObject(includeInstance, f),
    fromTs: (f = msg.getFromTs()) && cs3_types_types_pb.Timestamp.toObject(includeInstance, f),
    toTs: (f = msg.getToTs()) && cs3_types_types_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cs3.gatewayv0alpha.ListRecycleRequest}
 */
proto.cs3.gatewayv0alpha.ListRecycleRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cs3.gatewayv0alpha.ListRecycleRequest;
  return proto.cs3.gatewayv0alpha.ListRecycleRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cs3.gatewayv0alpha.ListRecycleRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cs3.gatewayv0alpha.ListRecycleRequest}
 */
proto.cs3.gatewayv0alpha.ListRecycleRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new cs3_types_types_pb.Opaque;
      reader.readMessage(value,cs3_types_types_pb.Opaque.deserializeBinaryFromReader);
      msg.setOpaque(value);
      break;
    case 2:
      var value = new cs3_storageprovider_v0alpha_resources_pb.Reference;
      reader.readMessage(value,cs3_storageprovider_v0alpha_resources_pb.Reference.deserializeBinaryFromReader);
      msg.setRef(value);
      break;
    case 3:
      var value = new cs3_types_types_pb.Timestamp;
      reader.readMessage(value,cs3_types_types_pb.Timestamp.deserializeBinaryFromReader);
      msg.setFromTs(value);
      break;
    case 4:
      var value = new cs3_types_types_pb.Timestamp;
      reader.readMessage(value,cs3_types_types_pb.Timestamp.deserializeBinaryFromReader);
      msg.setToTs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cs3.gatewayv0alpha.ListRecycleRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cs3.gatewayv0alpha.ListRecycleRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cs3.gatewayv0alpha.ListRecycleRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cs3.gatewayv0alpha.ListRecycleRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOpaque();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      cs3_types_types_pb.Opaque.serializeBinaryToWriter
    );
  }
  f = message.getRef();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      cs3_storageprovider_v0alpha_resources_pb.Reference.serializeBinaryToWriter
    );
  }
  f = message.getFromTs();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      cs3_types_types_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getToTs();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      cs3_types_types_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * optional cs3.types.Opaque opaque = 1;
 * @return {?proto.cs3.types.Opaque}
 */
proto.cs3.gatewayv0alpha.ListRecycleRequest.prototype.getOpaque = function() {
  return /** @type{?proto.cs3.types.Opaque} */ (
    jspb.Message.getWrapperField(this, cs3_types_types_pb.Opaque, 1));
};


/** @param {?proto.cs3.types.Opaque|undefined} value */
proto.cs3.gatewayv0alpha.ListRecycleRequest.prototype.setOpaque = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.cs3.gatewayv0alpha.ListRecycleRequest.prototype.clearOpaque = function() {
  this.setOpaque(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cs3.gatewayv0alpha.ListRecycleRequest.prototype.hasOpaque = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional cs3.storageproviderv0alpha.Reference ref = 2;
 * @return {?proto.cs3.storageproviderv0alpha.Reference}
 */
proto.cs3.gatewayv0alpha.ListRecycleRequest.prototype.getRef = function() {
  return /** @type{?proto.cs3.storageproviderv0alpha.Reference} */ (
    jspb.Message.getWrapperField(this, cs3_storageprovider_v0alpha_resources_pb.Reference, 2));
};


/** @param {?proto.cs3.storageproviderv0alpha.Reference|undefined} value */
proto.cs3.gatewayv0alpha.ListRecycleRequest.prototype.setRef = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.cs3.gatewayv0alpha.ListRecycleRequest.prototype.clearRef = function() {
  this.setRef(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cs3.gatewayv0alpha.ListRecycleRequest.prototype.hasRef = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional cs3.types.Timestamp from_ts = 3;
 * @return {?proto.cs3.types.Timestamp}
 */
proto.cs3.gatewayv0alpha.ListRecycleRequest.prototype.getFromTs = function() {
  return /** @type{?proto.cs3.types.Timestamp} */ (
    jspb.Message.getWrapperField(this, cs3_types_types_pb.Timestamp, 3));
};


/** @param {?proto.cs3.types.Timestamp|undefined} value */
proto.cs3.gatewayv0alpha.ListRecycleRequest.prototype.setFromTs = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.cs3.gatewayv0alpha.ListRecycleRequest.prototype.clearFromTs = function() {
  this.setFromTs(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cs3.gatewayv0alpha.ListRecycleRequest.prototype.hasFromTs = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional cs3.types.Timestamp to_ts = 4;
 * @return {?proto.cs3.types.Timestamp}
 */
proto.cs3.gatewayv0alpha.ListRecycleRequest.prototype.getToTs = function() {
  return /** @type{?proto.cs3.types.Timestamp} */ (
    jspb.Message.getWrapperField(this, cs3_types_types_pb.Timestamp, 4));
};


/** @param {?proto.cs3.types.Timestamp|undefined} value */
proto.cs3.gatewayv0alpha.ListRecycleRequest.prototype.setToTs = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.cs3.gatewayv0alpha.ListRecycleRequest.prototype.clearToTs = function() {
  this.setToTs(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cs3.gatewayv0alpha.ListRecycleRequest.prototype.hasToTs = function() {
  return jspb.Message.getField(this, 4) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cs3.gatewayv0alpha.ListRecycleStreamRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cs3.gatewayv0alpha.ListRecycleStreamRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cs3.gatewayv0alpha.ListRecycleStreamRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cs3.gatewayv0alpha.ListRecycleStreamRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    opaque: (f = msg.getOpaque()) && cs3_types_types_pb.Opaque.toObject(includeInstance, f),
    ref: (f = msg.getRef()) && cs3_storageprovider_v0alpha_resources_pb.Reference.toObject(includeInstance, f),
    fromTs: (f = msg.getFromTs()) && cs3_types_types_pb.Timestamp.toObject(includeInstance, f),
    toTs: (f = msg.getToTs()) && cs3_types_types_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cs3.gatewayv0alpha.ListRecycleStreamRequest}
 */
proto.cs3.gatewayv0alpha.ListRecycleStreamRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cs3.gatewayv0alpha.ListRecycleStreamRequest;
  return proto.cs3.gatewayv0alpha.ListRecycleStreamRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cs3.gatewayv0alpha.ListRecycleStreamRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cs3.gatewayv0alpha.ListRecycleStreamRequest}
 */
proto.cs3.gatewayv0alpha.ListRecycleStreamRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new cs3_types_types_pb.Opaque;
      reader.readMessage(value,cs3_types_types_pb.Opaque.deserializeBinaryFromReader);
      msg.setOpaque(value);
      break;
    case 2:
      var value = new cs3_storageprovider_v0alpha_resources_pb.Reference;
      reader.readMessage(value,cs3_storageprovider_v0alpha_resources_pb.Reference.deserializeBinaryFromReader);
      msg.setRef(value);
      break;
    case 3:
      var value = new cs3_types_types_pb.Timestamp;
      reader.readMessage(value,cs3_types_types_pb.Timestamp.deserializeBinaryFromReader);
      msg.setFromTs(value);
      break;
    case 4:
      var value = new cs3_types_types_pb.Timestamp;
      reader.readMessage(value,cs3_types_types_pb.Timestamp.deserializeBinaryFromReader);
      msg.setToTs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cs3.gatewayv0alpha.ListRecycleStreamRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cs3.gatewayv0alpha.ListRecycleStreamRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cs3.gatewayv0alpha.ListRecycleStreamRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cs3.gatewayv0alpha.ListRecycleStreamRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOpaque();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      cs3_types_types_pb.Opaque.serializeBinaryToWriter
    );
  }
  f = message.getRef();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      cs3_storageprovider_v0alpha_resources_pb.Reference.serializeBinaryToWriter
    );
  }
  f = message.getFromTs();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      cs3_types_types_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getToTs();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      cs3_types_types_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * optional cs3.types.Opaque opaque = 1;
 * @return {?proto.cs3.types.Opaque}
 */
proto.cs3.gatewayv0alpha.ListRecycleStreamRequest.prototype.getOpaque = function() {
  return /** @type{?proto.cs3.types.Opaque} */ (
    jspb.Message.getWrapperField(this, cs3_types_types_pb.Opaque, 1));
};


/** @param {?proto.cs3.types.Opaque|undefined} value */
proto.cs3.gatewayv0alpha.ListRecycleStreamRequest.prototype.setOpaque = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.cs3.gatewayv0alpha.ListRecycleStreamRequest.prototype.clearOpaque = function() {
  this.setOpaque(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cs3.gatewayv0alpha.ListRecycleStreamRequest.prototype.hasOpaque = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional cs3.storageproviderv0alpha.Reference ref = 2;
 * @return {?proto.cs3.storageproviderv0alpha.Reference}
 */
proto.cs3.gatewayv0alpha.ListRecycleStreamRequest.prototype.getRef = function() {
  return /** @type{?proto.cs3.storageproviderv0alpha.Reference} */ (
    jspb.Message.getWrapperField(this, cs3_storageprovider_v0alpha_resources_pb.Reference, 2));
};


/** @param {?proto.cs3.storageproviderv0alpha.Reference|undefined} value */
proto.cs3.gatewayv0alpha.ListRecycleStreamRequest.prototype.setRef = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.cs3.gatewayv0alpha.ListRecycleStreamRequest.prototype.clearRef = function() {
  this.setRef(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cs3.gatewayv0alpha.ListRecycleStreamRequest.prototype.hasRef = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional cs3.types.Timestamp from_ts = 3;
 * @return {?proto.cs3.types.Timestamp}
 */
proto.cs3.gatewayv0alpha.ListRecycleStreamRequest.prototype.getFromTs = function() {
  return /** @type{?proto.cs3.types.Timestamp} */ (
    jspb.Message.getWrapperField(this, cs3_types_types_pb.Timestamp, 3));
};


/** @param {?proto.cs3.types.Timestamp|undefined} value */
proto.cs3.gatewayv0alpha.ListRecycleStreamRequest.prototype.setFromTs = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.cs3.gatewayv0alpha.ListRecycleStreamRequest.prototype.clearFromTs = function() {
  this.setFromTs(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cs3.gatewayv0alpha.ListRecycleStreamRequest.prototype.hasFromTs = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional cs3.types.Timestamp to_ts = 4;
 * @return {?proto.cs3.types.Timestamp}
 */
proto.cs3.gatewayv0alpha.ListRecycleStreamRequest.prototype.getToTs = function() {
  return /** @type{?proto.cs3.types.Timestamp} */ (
    jspb.Message.getWrapperField(this, cs3_types_types_pb.Timestamp, 4));
};


/** @param {?proto.cs3.types.Timestamp|undefined} value */
proto.cs3.gatewayv0alpha.ListRecycleStreamRequest.prototype.setToTs = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.cs3.gatewayv0alpha.ListRecycleStreamRequest.prototype.clearToTs = function() {
  this.setToTs(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cs3.gatewayv0alpha.ListRecycleStreamRequest.prototype.hasToTs = function() {
  return jspb.Message.getField(this, 4) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cs3.gatewayv0alpha.PurgeRecycleRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cs3.gatewayv0alpha.PurgeRecycleRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cs3.gatewayv0alpha.PurgeRecycleRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cs3.gatewayv0alpha.PurgeRecycleRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    opaque: (f = msg.getOpaque()) && cs3_types_types_pb.Opaque.toObject(includeInstance, f),
    ref: (f = msg.getRef()) && cs3_storageprovider_v0alpha_resources_pb.Reference.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cs3.gatewayv0alpha.PurgeRecycleRequest}
 */
proto.cs3.gatewayv0alpha.PurgeRecycleRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cs3.gatewayv0alpha.PurgeRecycleRequest;
  return proto.cs3.gatewayv0alpha.PurgeRecycleRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cs3.gatewayv0alpha.PurgeRecycleRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cs3.gatewayv0alpha.PurgeRecycleRequest}
 */
proto.cs3.gatewayv0alpha.PurgeRecycleRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new cs3_types_types_pb.Opaque;
      reader.readMessage(value,cs3_types_types_pb.Opaque.deserializeBinaryFromReader);
      msg.setOpaque(value);
      break;
    case 2:
      var value = new cs3_storageprovider_v0alpha_resources_pb.Reference;
      reader.readMessage(value,cs3_storageprovider_v0alpha_resources_pb.Reference.deserializeBinaryFromReader);
      msg.setRef(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cs3.gatewayv0alpha.PurgeRecycleRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cs3.gatewayv0alpha.PurgeRecycleRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cs3.gatewayv0alpha.PurgeRecycleRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cs3.gatewayv0alpha.PurgeRecycleRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOpaque();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      cs3_types_types_pb.Opaque.serializeBinaryToWriter
    );
  }
  f = message.getRef();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      cs3_storageprovider_v0alpha_resources_pb.Reference.serializeBinaryToWriter
    );
  }
};


/**
 * optional cs3.types.Opaque opaque = 1;
 * @return {?proto.cs3.types.Opaque}
 */
proto.cs3.gatewayv0alpha.PurgeRecycleRequest.prototype.getOpaque = function() {
  return /** @type{?proto.cs3.types.Opaque} */ (
    jspb.Message.getWrapperField(this, cs3_types_types_pb.Opaque, 1));
};


/** @param {?proto.cs3.types.Opaque|undefined} value */
proto.cs3.gatewayv0alpha.PurgeRecycleRequest.prototype.setOpaque = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.cs3.gatewayv0alpha.PurgeRecycleRequest.prototype.clearOpaque = function() {
  this.setOpaque(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cs3.gatewayv0alpha.PurgeRecycleRequest.prototype.hasOpaque = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional cs3.storageproviderv0alpha.Reference ref = 2;
 * @return {?proto.cs3.storageproviderv0alpha.Reference}
 */
proto.cs3.gatewayv0alpha.PurgeRecycleRequest.prototype.getRef = function() {
  return /** @type{?proto.cs3.storageproviderv0alpha.Reference} */ (
    jspb.Message.getWrapperField(this, cs3_storageprovider_v0alpha_resources_pb.Reference, 2));
};


/** @param {?proto.cs3.storageproviderv0alpha.Reference|undefined} value */
proto.cs3.gatewayv0alpha.PurgeRecycleRequest.prototype.setRef = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.cs3.gatewayv0alpha.PurgeRecycleRequest.prototype.clearRef = function() {
  this.setRef(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cs3.gatewayv0alpha.PurgeRecycleRequest.prototype.hasRef = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cs3.gatewayv0alpha.InitiateFileDownloadResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.cs3.gatewayv0alpha.InitiateFileDownloadResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cs3.gatewayv0alpha.InitiateFileDownloadResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cs3.gatewayv0alpha.InitiateFileDownloadResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: (f = msg.getStatus()) && cs3_rpc_status_pb.Status.toObject(includeInstance, f),
    opaque: (f = msg.getOpaque()) && cs3_types_types_pb.Opaque.toObject(includeInstance, f),
    downloadEndpoint: jspb.Message.getFieldWithDefault(msg, 3, ""),
    expose: jspb.Message.getBooleanFieldWithDefault(msg, 5, false),
    token: jspb.Message.getFieldWithDefault(msg, 6, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cs3.gatewayv0alpha.InitiateFileDownloadResponse}
 */
proto.cs3.gatewayv0alpha.InitiateFileDownloadResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cs3.gatewayv0alpha.InitiateFileDownloadResponse;
  return proto.cs3.gatewayv0alpha.InitiateFileDownloadResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cs3.gatewayv0alpha.InitiateFileDownloadResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cs3.gatewayv0alpha.InitiateFileDownloadResponse}
 */
proto.cs3.gatewayv0alpha.InitiateFileDownloadResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new cs3_rpc_status_pb.Status;
      reader.readMessage(value,cs3_rpc_status_pb.Status.deserializeBinaryFromReader);
      msg.setStatus(value);
      break;
    case 2:
      var value = new cs3_types_types_pb.Opaque;
      reader.readMessage(value,cs3_types_types_pb.Opaque.deserializeBinaryFromReader);
      msg.setOpaque(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDownloadEndpoint(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setExpose(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setToken(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cs3.gatewayv0alpha.InitiateFileDownloadResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cs3.gatewayv0alpha.InitiateFileDownloadResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cs3.gatewayv0alpha.InitiateFileDownloadResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cs3.gatewayv0alpha.InitiateFileDownloadResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      cs3_rpc_status_pb.Status.serializeBinaryToWriter
    );
  }
  f = message.getOpaque();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      cs3_types_types_pb.Opaque.serializeBinaryToWriter
    );
  }
  f = message.getDownloadEndpoint();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getExpose();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
  f = message.getToken();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
};


/**
 * optional cs3.rpc.Status status = 1;
 * @return {?proto.cs3.rpc.Status}
 */
proto.cs3.gatewayv0alpha.InitiateFileDownloadResponse.prototype.getStatus = function() {
  return /** @type{?proto.cs3.rpc.Status} */ (
    jspb.Message.getWrapperField(this, cs3_rpc_status_pb.Status, 1));
};


/** @param {?proto.cs3.rpc.Status|undefined} value */
proto.cs3.gatewayv0alpha.InitiateFileDownloadResponse.prototype.setStatus = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.cs3.gatewayv0alpha.InitiateFileDownloadResponse.prototype.clearStatus = function() {
  this.setStatus(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cs3.gatewayv0alpha.InitiateFileDownloadResponse.prototype.hasStatus = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional cs3.types.Opaque opaque = 2;
 * @return {?proto.cs3.types.Opaque}
 */
proto.cs3.gatewayv0alpha.InitiateFileDownloadResponse.prototype.getOpaque = function() {
  return /** @type{?proto.cs3.types.Opaque} */ (
    jspb.Message.getWrapperField(this, cs3_types_types_pb.Opaque, 2));
};


/** @param {?proto.cs3.types.Opaque|undefined} value */
proto.cs3.gatewayv0alpha.InitiateFileDownloadResponse.prototype.setOpaque = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.cs3.gatewayv0alpha.InitiateFileDownloadResponse.prototype.clearOpaque = function() {
  this.setOpaque(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cs3.gatewayv0alpha.InitiateFileDownloadResponse.prototype.hasOpaque = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string download_endpoint = 3;
 * @return {string}
 */
proto.cs3.gatewayv0alpha.InitiateFileDownloadResponse.prototype.getDownloadEndpoint = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.cs3.gatewayv0alpha.InitiateFileDownloadResponse.prototype.setDownloadEndpoint = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional bool expose = 5;
 * @return {boolean}
 */
proto.cs3.gatewayv0alpha.InitiateFileDownloadResponse.prototype.getExpose = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/** @param {boolean} value */
proto.cs3.gatewayv0alpha.InitiateFileDownloadResponse.prototype.setExpose = function(value) {
  jspb.Message.setProto3BooleanField(this, 5, value);
};


/**
 * optional string token = 6;
 * @return {string}
 */
proto.cs3.gatewayv0alpha.InitiateFileDownloadResponse.prototype.getToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/** @param {string} value */
proto.cs3.gatewayv0alpha.InitiateFileDownloadResponse.prototype.setToken = function(value) {
  jspb.Message.setProto3StringField(this, 6, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cs3.gatewayv0alpha.InitiateFileUploadResponse.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cs3.gatewayv0alpha.InitiateFileUploadResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.cs3.gatewayv0alpha.InitiateFileUploadResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cs3.gatewayv0alpha.InitiateFileUploadResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cs3.gatewayv0alpha.InitiateFileUploadResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: (f = msg.getStatus()) && cs3_rpc_status_pb.Status.toObject(includeInstance, f),
    opaque: (f = msg.getOpaque()) && cs3_types_types_pb.Opaque.toObject(includeInstance, f),
    uploadEndpoint: jspb.Message.getFieldWithDefault(msg, 3, ""),
    availableChecksumsList: jspb.Message.toObjectList(msg.getAvailableChecksumsList(),
    cs3_storageprovider_v0alpha_resources_pb.ResourceChecksumPriority.toObject, includeInstance),
    token: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cs3.gatewayv0alpha.InitiateFileUploadResponse}
 */
proto.cs3.gatewayv0alpha.InitiateFileUploadResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cs3.gatewayv0alpha.InitiateFileUploadResponse;
  return proto.cs3.gatewayv0alpha.InitiateFileUploadResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cs3.gatewayv0alpha.InitiateFileUploadResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cs3.gatewayv0alpha.InitiateFileUploadResponse}
 */
proto.cs3.gatewayv0alpha.InitiateFileUploadResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new cs3_rpc_status_pb.Status;
      reader.readMessage(value,cs3_rpc_status_pb.Status.deserializeBinaryFromReader);
      msg.setStatus(value);
      break;
    case 2:
      var value = new cs3_types_types_pb.Opaque;
      reader.readMessage(value,cs3_types_types_pb.Opaque.deserializeBinaryFromReader);
      msg.setOpaque(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setUploadEndpoint(value);
      break;
    case 4:
      var value = new cs3_storageprovider_v0alpha_resources_pb.ResourceChecksumPriority;
      reader.readMessage(value,cs3_storageprovider_v0alpha_resources_pb.ResourceChecksumPriority.deserializeBinaryFromReader);
      msg.addAvailableChecksums(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setToken(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cs3.gatewayv0alpha.InitiateFileUploadResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cs3.gatewayv0alpha.InitiateFileUploadResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cs3.gatewayv0alpha.InitiateFileUploadResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cs3.gatewayv0alpha.InitiateFileUploadResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      cs3_rpc_status_pb.Status.serializeBinaryToWriter
    );
  }
  f = message.getOpaque();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      cs3_types_types_pb.Opaque.serializeBinaryToWriter
    );
  }
  f = message.getUploadEndpoint();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getAvailableChecksumsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      cs3_storageprovider_v0alpha_resources_pb.ResourceChecksumPriority.serializeBinaryToWriter
    );
  }
  f = message.getToken();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional cs3.rpc.Status status = 1;
 * @return {?proto.cs3.rpc.Status}
 */
proto.cs3.gatewayv0alpha.InitiateFileUploadResponse.prototype.getStatus = function() {
  return /** @type{?proto.cs3.rpc.Status} */ (
    jspb.Message.getWrapperField(this, cs3_rpc_status_pb.Status, 1));
};


/** @param {?proto.cs3.rpc.Status|undefined} value */
proto.cs3.gatewayv0alpha.InitiateFileUploadResponse.prototype.setStatus = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.cs3.gatewayv0alpha.InitiateFileUploadResponse.prototype.clearStatus = function() {
  this.setStatus(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cs3.gatewayv0alpha.InitiateFileUploadResponse.prototype.hasStatus = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional cs3.types.Opaque opaque = 2;
 * @return {?proto.cs3.types.Opaque}
 */
proto.cs3.gatewayv0alpha.InitiateFileUploadResponse.prototype.getOpaque = function() {
  return /** @type{?proto.cs3.types.Opaque} */ (
    jspb.Message.getWrapperField(this, cs3_types_types_pb.Opaque, 2));
};


/** @param {?proto.cs3.types.Opaque|undefined} value */
proto.cs3.gatewayv0alpha.InitiateFileUploadResponse.prototype.setOpaque = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.cs3.gatewayv0alpha.InitiateFileUploadResponse.prototype.clearOpaque = function() {
  this.setOpaque(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cs3.gatewayv0alpha.InitiateFileUploadResponse.prototype.hasOpaque = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string upload_endpoint = 3;
 * @return {string}
 */
proto.cs3.gatewayv0alpha.InitiateFileUploadResponse.prototype.getUploadEndpoint = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.cs3.gatewayv0alpha.InitiateFileUploadResponse.prototype.setUploadEndpoint = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * repeated cs3.storageproviderv0alpha.ResourceChecksumPriority available_checksums = 4;
 * @return {!Array<!proto.cs3.storageproviderv0alpha.ResourceChecksumPriority>}
 */
proto.cs3.gatewayv0alpha.InitiateFileUploadResponse.prototype.getAvailableChecksumsList = function() {
  return /** @type{!Array<!proto.cs3.storageproviderv0alpha.ResourceChecksumPriority>} */ (
    jspb.Message.getRepeatedWrapperField(this, cs3_storageprovider_v0alpha_resources_pb.ResourceChecksumPriority, 4));
};


/** @param {!Array<!proto.cs3.storageproviderv0alpha.ResourceChecksumPriority>} value */
proto.cs3.gatewayv0alpha.InitiateFileUploadResponse.prototype.setAvailableChecksumsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.cs3.storageproviderv0alpha.ResourceChecksumPriority=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cs3.storageproviderv0alpha.ResourceChecksumPriority}
 */
proto.cs3.gatewayv0alpha.InitiateFileUploadResponse.prototype.addAvailableChecksums = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.cs3.storageproviderv0alpha.ResourceChecksumPriority, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.cs3.gatewayv0alpha.InitiateFileUploadResponse.prototype.clearAvailableChecksumsList = function() {
  this.setAvailableChecksumsList([]);
};


/**
 * optional string token = 5;
 * @return {string}
 */
proto.cs3.gatewayv0alpha.InitiateFileUploadResponse.prototype.getToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.cs3.gatewayv0alpha.InitiateFileUploadResponse.prototype.setToken = function(value) {
  jspb.Message.setProto3StringField(this, 5, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cs3.gatewayv0alpha.ListAuthProvidersResponse.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cs3.gatewayv0alpha.ListAuthProvidersResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.cs3.gatewayv0alpha.ListAuthProvidersResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cs3.gatewayv0alpha.ListAuthProvidersResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cs3.gatewayv0alpha.ListAuthProvidersResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: (f = msg.getStatus()) && cs3_rpc_status_pb.Status.toObject(includeInstance, f),
    opaque: (f = msg.getOpaque()) && cs3_types_types_pb.Opaque.toObject(includeInstance, f),
    typesList: (f = jspb.Message.getRepeatedField(msg, 3)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cs3.gatewayv0alpha.ListAuthProvidersResponse}
 */
proto.cs3.gatewayv0alpha.ListAuthProvidersResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cs3.gatewayv0alpha.ListAuthProvidersResponse;
  return proto.cs3.gatewayv0alpha.ListAuthProvidersResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cs3.gatewayv0alpha.ListAuthProvidersResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cs3.gatewayv0alpha.ListAuthProvidersResponse}
 */
proto.cs3.gatewayv0alpha.ListAuthProvidersResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new cs3_rpc_status_pb.Status;
      reader.readMessage(value,cs3_rpc_status_pb.Status.deserializeBinaryFromReader);
      msg.setStatus(value);
      break;
    case 2:
      var value = new cs3_types_types_pb.Opaque;
      reader.readMessage(value,cs3_types_types_pb.Opaque.deserializeBinaryFromReader);
      msg.setOpaque(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.addTypes(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cs3.gatewayv0alpha.ListAuthProvidersResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cs3.gatewayv0alpha.ListAuthProvidersResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cs3.gatewayv0alpha.ListAuthProvidersResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cs3.gatewayv0alpha.ListAuthProvidersResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      cs3_rpc_status_pb.Status.serializeBinaryToWriter
    );
  }
  f = message.getOpaque();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      cs3_types_types_pb.Opaque.serializeBinaryToWriter
    );
  }
  f = message.getTypesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      3,
      f
    );
  }
};


/**
 * optional cs3.rpc.Status status = 1;
 * @return {?proto.cs3.rpc.Status}
 */
proto.cs3.gatewayv0alpha.ListAuthProvidersResponse.prototype.getStatus = function() {
  return /** @type{?proto.cs3.rpc.Status} */ (
    jspb.Message.getWrapperField(this, cs3_rpc_status_pb.Status, 1));
};


/** @param {?proto.cs3.rpc.Status|undefined} value */
proto.cs3.gatewayv0alpha.ListAuthProvidersResponse.prototype.setStatus = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.cs3.gatewayv0alpha.ListAuthProvidersResponse.prototype.clearStatus = function() {
  this.setStatus(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cs3.gatewayv0alpha.ListAuthProvidersResponse.prototype.hasStatus = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional cs3.types.Opaque opaque = 2;
 * @return {?proto.cs3.types.Opaque}
 */
proto.cs3.gatewayv0alpha.ListAuthProvidersResponse.prototype.getOpaque = function() {
  return /** @type{?proto.cs3.types.Opaque} */ (
    jspb.Message.getWrapperField(this, cs3_types_types_pb.Opaque, 2));
};


/** @param {?proto.cs3.types.Opaque|undefined} value */
proto.cs3.gatewayv0alpha.ListAuthProvidersResponse.prototype.setOpaque = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.cs3.gatewayv0alpha.ListAuthProvidersResponse.prototype.clearOpaque = function() {
  this.setOpaque(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cs3.gatewayv0alpha.ListAuthProvidersResponse.prototype.hasOpaque = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * repeated string types = 3;
 * @return {!Array<string>}
 */
proto.cs3.gatewayv0alpha.ListAuthProvidersResponse.prototype.getTypesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 3));
};


/** @param {!Array<string>} value */
proto.cs3.gatewayv0alpha.ListAuthProvidersResponse.prototype.setTypesList = function(value) {
  jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 */
proto.cs3.gatewayv0alpha.ListAuthProvidersResponse.prototype.addTypes = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.cs3.gatewayv0alpha.ListAuthProvidersResponse.prototype.clearTypesList = function() {
  this.setTypesList([]);
};


goog.object.extend(exports, proto.cs3.gatewayv0alpha);
