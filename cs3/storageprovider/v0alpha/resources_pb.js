// source: cs3/storageprovider/v0alpha/resources.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var cs3_types_types_pb = require('../../../cs3/types/types_pb.js');
goog.object.extend(proto, cs3_types_types_pb);
goog.exportSymbol('proto.cs3.storageproviderv0alpha.ArbitraryMetadata', null, global);
goog.exportSymbol('proto.cs3.storageproviderv0alpha.CanonicalMetadata', null, global);
goog.exportSymbol('proto.cs3.storageproviderv0alpha.FileVersion', null, global);
goog.exportSymbol('proto.cs3.storageproviderv0alpha.Grant', null, global);
goog.exportSymbol('proto.cs3.storageproviderv0alpha.Grantee', null, global);
goog.exportSymbol('proto.cs3.storageproviderv0alpha.GranteeType', null, global);
goog.exportSymbol('proto.cs3.storageproviderv0alpha.RecycleItem', null, global);
goog.exportSymbol('proto.cs3.storageproviderv0alpha.Reference', null, global);
goog.exportSymbol('proto.cs3.storageproviderv0alpha.Reference.SpecCase', null, global);
goog.exportSymbol('proto.cs3.storageproviderv0alpha.ResourceChecksum', null, global);
goog.exportSymbol('proto.cs3.storageproviderv0alpha.ResourceChecksumPriority', null, global);
goog.exportSymbol('proto.cs3.storageproviderv0alpha.ResourceChecksumType', null, global);
goog.exportSymbol('proto.cs3.storageproviderv0alpha.ResourceId', null, global);
goog.exportSymbol('proto.cs3.storageproviderv0alpha.ResourceInfo', null, global);
goog.exportSymbol('proto.cs3.storageproviderv0alpha.ResourcePermissions', null, global);
goog.exportSymbol('proto.cs3.storageproviderv0alpha.ResourceType', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cs3.storageproviderv0alpha.ResourceInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cs3.storageproviderv0alpha.ResourceInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cs3.storageproviderv0alpha.ResourceInfo.displayName = 'proto.cs3.storageproviderv0alpha.ResourceInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cs3.storageproviderv0alpha.CanonicalMetadata = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cs3.storageproviderv0alpha.CanonicalMetadata, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cs3.storageproviderv0alpha.CanonicalMetadata.displayName = 'proto.cs3.storageproviderv0alpha.CanonicalMetadata';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cs3.storageproviderv0alpha.ArbitraryMetadata = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cs3.storageproviderv0alpha.ArbitraryMetadata, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cs3.storageproviderv0alpha.ArbitraryMetadata.displayName = 'proto.cs3.storageproviderv0alpha.ArbitraryMetadata';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cs3.storageproviderv0alpha.ResourceChecksum = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cs3.storageproviderv0alpha.ResourceChecksum, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cs3.storageproviderv0alpha.ResourceChecksum.displayName = 'proto.cs3.storageproviderv0alpha.ResourceChecksum';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cs3.storageproviderv0alpha.ResourceChecksumPriority = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cs3.storageproviderv0alpha.ResourceChecksumPriority, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cs3.storageproviderv0alpha.ResourceChecksumPriority.displayName = 'proto.cs3.storageproviderv0alpha.ResourceChecksumPriority';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cs3.storageproviderv0alpha.Reference = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.cs3.storageproviderv0alpha.Reference.oneofGroups_);
};
goog.inherits(proto.cs3.storageproviderv0alpha.Reference, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cs3.storageproviderv0alpha.Reference.displayName = 'proto.cs3.storageproviderv0alpha.Reference';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cs3.storageproviderv0alpha.ResourceId = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cs3.storageproviderv0alpha.ResourceId, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cs3.storageproviderv0alpha.ResourceId.displayName = 'proto.cs3.storageproviderv0alpha.ResourceId';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cs3.storageproviderv0alpha.ResourcePermissions = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cs3.storageproviderv0alpha.ResourcePermissions, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cs3.storageproviderv0alpha.ResourcePermissions.displayName = 'proto.cs3.storageproviderv0alpha.ResourcePermissions';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cs3.storageproviderv0alpha.Grant = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cs3.storageproviderv0alpha.Grant, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cs3.storageproviderv0alpha.Grant.displayName = 'proto.cs3.storageproviderv0alpha.Grant';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cs3.storageproviderv0alpha.Grantee = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cs3.storageproviderv0alpha.Grantee, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cs3.storageproviderv0alpha.Grantee.displayName = 'proto.cs3.storageproviderv0alpha.Grantee';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cs3.storageproviderv0alpha.FileVersion = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cs3.storageproviderv0alpha.FileVersion, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cs3.storageproviderv0alpha.FileVersion.displayName = 'proto.cs3.storageproviderv0alpha.FileVersion';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cs3.storageproviderv0alpha.RecycleItem = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cs3.storageproviderv0alpha.RecycleItem, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cs3.storageproviderv0alpha.RecycleItem.displayName = 'proto.cs3.storageproviderv0alpha.RecycleItem';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cs3.storageproviderv0alpha.ResourceInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.cs3.storageproviderv0alpha.ResourceInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cs3.storageproviderv0alpha.ResourceInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cs3.storageproviderv0alpha.ResourceInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    opaque: (f = msg.getOpaque()) && cs3_types_types_pb.Opaque.toObject(includeInstance, f),
    type: jspb.Message.getFieldWithDefault(msg, 2, 0),
    id: (f = msg.getId()) && proto.cs3.storageproviderv0alpha.ResourceId.toObject(includeInstance, f),
    checksum: (f = msg.getChecksum()) && proto.cs3.storageproviderv0alpha.ResourceChecksum.toObject(includeInstance, f),
    etag: jspb.Message.getFieldWithDefault(msg, 5, ""),
    mimeType: jspb.Message.getFieldWithDefault(msg, 6, ""),
    mtime: (f = msg.getMtime()) && cs3_types_types_pb.Timestamp.toObject(includeInstance, f),
    path: jspb.Message.getFieldWithDefault(msg, 8, ""),
    permissionSet: (f = msg.getPermissionSet()) && proto.cs3.storageproviderv0alpha.ResourcePermissions.toObject(includeInstance, f),
    size: jspb.Message.getFieldWithDefault(msg, 10, 0),
    owner: (f = msg.getOwner()) && cs3_types_types_pb.UserId.toObject(includeInstance, f),
    canonicalMetadata: (f = msg.getCanonicalMetadata()) && proto.cs3.storageproviderv0alpha.CanonicalMetadata.toObject(includeInstance, f),
    arbitraryMetadata: (f = msg.getArbitraryMetadata()) && proto.cs3.storageproviderv0alpha.ArbitraryMetadata.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cs3.storageproviderv0alpha.ResourceInfo}
 */
proto.cs3.storageproviderv0alpha.ResourceInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cs3.storageproviderv0alpha.ResourceInfo;
  return proto.cs3.storageproviderv0alpha.ResourceInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cs3.storageproviderv0alpha.ResourceInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cs3.storageproviderv0alpha.ResourceInfo}
 */
proto.cs3.storageproviderv0alpha.ResourceInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new cs3_types_types_pb.Opaque;
      reader.readMessage(value,cs3_types_types_pb.Opaque.deserializeBinaryFromReader);
      msg.setOpaque(value);
      break;
    case 2:
      var value = /** @type {!proto.cs3.storageproviderv0alpha.ResourceType} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 3:
      var value = new proto.cs3.storageproviderv0alpha.ResourceId;
      reader.readMessage(value,proto.cs3.storageproviderv0alpha.ResourceId.deserializeBinaryFromReader);
      msg.setId(value);
      break;
    case 4:
      var value = new proto.cs3.storageproviderv0alpha.ResourceChecksum;
      reader.readMessage(value,proto.cs3.storageproviderv0alpha.ResourceChecksum.deserializeBinaryFromReader);
      msg.setChecksum(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setEtag(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setMimeType(value);
      break;
    case 7:
      var value = new cs3_types_types_pb.Timestamp;
      reader.readMessage(value,cs3_types_types_pb.Timestamp.deserializeBinaryFromReader);
      msg.setMtime(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setPath(value);
      break;
    case 9:
      var value = new proto.cs3.storageproviderv0alpha.ResourcePermissions;
      reader.readMessage(value,proto.cs3.storageproviderv0alpha.ResourcePermissions.deserializeBinaryFromReader);
      msg.setPermissionSet(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setSize(value);
      break;
    case 11:
      var value = new cs3_types_types_pb.UserId;
      reader.readMessage(value,cs3_types_types_pb.UserId.deserializeBinaryFromReader);
      msg.setOwner(value);
      break;
    case 13:
      var value = new proto.cs3.storageproviderv0alpha.CanonicalMetadata;
      reader.readMessage(value,proto.cs3.storageproviderv0alpha.CanonicalMetadata.deserializeBinaryFromReader);
      msg.setCanonicalMetadata(value);
      break;
    case 14:
      var value = new proto.cs3.storageproviderv0alpha.ArbitraryMetadata;
      reader.readMessage(value,proto.cs3.storageproviderv0alpha.ArbitraryMetadata.deserializeBinaryFromReader);
      msg.setArbitraryMetadata(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cs3.storageproviderv0alpha.ResourceInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cs3.storageproviderv0alpha.ResourceInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cs3.storageproviderv0alpha.ResourceInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cs3.storageproviderv0alpha.ResourceInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOpaque();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      cs3_types_types_pb.Opaque.serializeBinaryToWriter
    );
  }
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getId();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.cs3.storageproviderv0alpha.ResourceId.serializeBinaryToWriter
    );
  }
  f = message.getChecksum();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.cs3.storageproviderv0alpha.ResourceChecksum.serializeBinaryToWriter
    );
  }
  f = message.getEtag();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getMimeType();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getMtime();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      cs3_types_types_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getPath();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getPermissionSet();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.cs3.storageproviderv0alpha.ResourcePermissions.serializeBinaryToWriter
    );
  }
  f = message.getSize();
  if (f !== 0) {
    writer.writeUint64(
      10,
      f
    );
  }
  f = message.getOwner();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      cs3_types_types_pb.UserId.serializeBinaryToWriter
    );
  }
  f = message.getCanonicalMetadata();
  if (f != null) {
    writer.writeMessage(
      13,
      f,
      proto.cs3.storageproviderv0alpha.CanonicalMetadata.serializeBinaryToWriter
    );
  }
  f = message.getArbitraryMetadata();
  if (f != null) {
    writer.writeMessage(
      14,
      f,
      proto.cs3.storageproviderv0alpha.ArbitraryMetadata.serializeBinaryToWriter
    );
  }
};


/**
 * optional cs3.types.Opaque opaque = 1;
 * @return {?proto.cs3.types.Opaque}
 */
proto.cs3.storageproviderv0alpha.ResourceInfo.prototype.getOpaque = function() {
  return /** @type{?proto.cs3.types.Opaque} */ (
    jspb.Message.getWrapperField(this, cs3_types_types_pb.Opaque, 1));
};


/** @param {?proto.cs3.types.Opaque|undefined} value */
proto.cs3.storageproviderv0alpha.ResourceInfo.prototype.setOpaque = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.cs3.storageproviderv0alpha.ResourceInfo.prototype.clearOpaque = function() {
  this.setOpaque(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cs3.storageproviderv0alpha.ResourceInfo.prototype.hasOpaque = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional ResourceType type = 2;
 * @return {!proto.cs3.storageproviderv0alpha.ResourceType}
 */
proto.cs3.storageproviderv0alpha.ResourceInfo.prototype.getType = function() {
  return /** @type {!proto.cs3.storageproviderv0alpha.ResourceType} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {!proto.cs3.storageproviderv0alpha.ResourceType} value */
proto.cs3.storageproviderv0alpha.ResourceInfo.prototype.setType = function(value) {
  jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional ResourceId id = 3;
 * @return {?proto.cs3.storageproviderv0alpha.ResourceId}
 */
proto.cs3.storageproviderv0alpha.ResourceInfo.prototype.getId = function() {
  return /** @type{?proto.cs3.storageproviderv0alpha.ResourceId} */ (
    jspb.Message.getWrapperField(this, proto.cs3.storageproviderv0alpha.ResourceId, 3));
};


/** @param {?proto.cs3.storageproviderv0alpha.ResourceId|undefined} value */
proto.cs3.storageproviderv0alpha.ResourceInfo.prototype.setId = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.cs3.storageproviderv0alpha.ResourceInfo.prototype.clearId = function() {
  this.setId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cs3.storageproviderv0alpha.ResourceInfo.prototype.hasId = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional ResourceChecksum checksum = 4;
 * @return {?proto.cs3.storageproviderv0alpha.ResourceChecksum}
 */
proto.cs3.storageproviderv0alpha.ResourceInfo.prototype.getChecksum = function() {
  return /** @type{?proto.cs3.storageproviderv0alpha.ResourceChecksum} */ (
    jspb.Message.getWrapperField(this, proto.cs3.storageproviderv0alpha.ResourceChecksum, 4));
};


/** @param {?proto.cs3.storageproviderv0alpha.ResourceChecksum|undefined} value */
proto.cs3.storageproviderv0alpha.ResourceInfo.prototype.setChecksum = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.cs3.storageproviderv0alpha.ResourceInfo.prototype.clearChecksum = function() {
  this.setChecksum(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cs3.storageproviderv0alpha.ResourceInfo.prototype.hasChecksum = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string etag = 5;
 * @return {string}
 */
proto.cs3.storageproviderv0alpha.ResourceInfo.prototype.getEtag = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.cs3.storageproviderv0alpha.ResourceInfo.prototype.setEtag = function(value) {
  jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string mime_type = 6;
 * @return {string}
 */
proto.cs3.storageproviderv0alpha.ResourceInfo.prototype.getMimeType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/** @param {string} value */
proto.cs3.storageproviderv0alpha.ResourceInfo.prototype.setMimeType = function(value) {
  jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional cs3.types.Timestamp mtime = 7;
 * @return {?proto.cs3.types.Timestamp}
 */
proto.cs3.storageproviderv0alpha.ResourceInfo.prototype.getMtime = function() {
  return /** @type{?proto.cs3.types.Timestamp} */ (
    jspb.Message.getWrapperField(this, cs3_types_types_pb.Timestamp, 7));
};


/** @param {?proto.cs3.types.Timestamp|undefined} value */
proto.cs3.storageproviderv0alpha.ResourceInfo.prototype.setMtime = function(value) {
  jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.cs3.storageproviderv0alpha.ResourceInfo.prototype.clearMtime = function() {
  this.setMtime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cs3.storageproviderv0alpha.ResourceInfo.prototype.hasMtime = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional string path = 8;
 * @return {string}
 */
proto.cs3.storageproviderv0alpha.ResourceInfo.prototype.getPath = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/** @param {string} value */
proto.cs3.storageproviderv0alpha.ResourceInfo.prototype.setPath = function(value) {
  jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional ResourcePermissions permission_set = 9;
 * @return {?proto.cs3.storageproviderv0alpha.ResourcePermissions}
 */
proto.cs3.storageproviderv0alpha.ResourceInfo.prototype.getPermissionSet = function() {
  return /** @type{?proto.cs3.storageproviderv0alpha.ResourcePermissions} */ (
    jspb.Message.getWrapperField(this, proto.cs3.storageproviderv0alpha.ResourcePermissions, 9));
};


/** @param {?proto.cs3.storageproviderv0alpha.ResourcePermissions|undefined} value */
proto.cs3.storageproviderv0alpha.ResourceInfo.prototype.setPermissionSet = function(value) {
  jspb.Message.setWrapperField(this, 9, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.cs3.storageproviderv0alpha.ResourceInfo.prototype.clearPermissionSet = function() {
  this.setPermissionSet(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cs3.storageproviderv0alpha.ResourceInfo.prototype.hasPermissionSet = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional uint64 size = 10;
 * @return {number}
 */
proto.cs3.storageproviderv0alpha.ResourceInfo.prototype.getSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/** @param {number} value */
proto.cs3.storageproviderv0alpha.ResourceInfo.prototype.setSize = function(value) {
  jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * optional cs3.types.UserId owner = 11;
 * @return {?proto.cs3.types.UserId}
 */
proto.cs3.storageproviderv0alpha.ResourceInfo.prototype.getOwner = function() {
  return /** @type{?proto.cs3.types.UserId} */ (
    jspb.Message.getWrapperField(this, cs3_types_types_pb.UserId, 11));
};


/** @param {?proto.cs3.types.UserId|undefined} value */
proto.cs3.storageproviderv0alpha.ResourceInfo.prototype.setOwner = function(value) {
  jspb.Message.setWrapperField(this, 11, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.cs3.storageproviderv0alpha.ResourceInfo.prototype.clearOwner = function() {
  this.setOwner(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cs3.storageproviderv0alpha.ResourceInfo.prototype.hasOwner = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional CanonicalMetadata canonical_metadata = 13;
 * @return {?proto.cs3.storageproviderv0alpha.CanonicalMetadata}
 */
proto.cs3.storageproviderv0alpha.ResourceInfo.prototype.getCanonicalMetadata = function() {
  return /** @type{?proto.cs3.storageproviderv0alpha.CanonicalMetadata} */ (
    jspb.Message.getWrapperField(this, proto.cs3.storageproviderv0alpha.CanonicalMetadata, 13));
};


/** @param {?proto.cs3.storageproviderv0alpha.CanonicalMetadata|undefined} value */
proto.cs3.storageproviderv0alpha.ResourceInfo.prototype.setCanonicalMetadata = function(value) {
  jspb.Message.setWrapperField(this, 13, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.cs3.storageproviderv0alpha.ResourceInfo.prototype.clearCanonicalMetadata = function() {
  this.setCanonicalMetadata(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cs3.storageproviderv0alpha.ResourceInfo.prototype.hasCanonicalMetadata = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional ArbitraryMetadata arbitrary_metadata = 14;
 * @return {?proto.cs3.storageproviderv0alpha.ArbitraryMetadata}
 */
proto.cs3.storageproviderv0alpha.ResourceInfo.prototype.getArbitraryMetadata = function() {
  return /** @type{?proto.cs3.storageproviderv0alpha.ArbitraryMetadata} */ (
    jspb.Message.getWrapperField(this, proto.cs3.storageproviderv0alpha.ArbitraryMetadata, 14));
};


/** @param {?proto.cs3.storageproviderv0alpha.ArbitraryMetadata|undefined} value */
proto.cs3.storageproviderv0alpha.ResourceInfo.prototype.setArbitraryMetadata = function(value) {
  jspb.Message.setWrapperField(this, 14, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.cs3.storageproviderv0alpha.ResourceInfo.prototype.clearArbitraryMetadata = function() {
  this.setArbitraryMetadata(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cs3.storageproviderv0alpha.ResourceInfo.prototype.hasArbitraryMetadata = function() {
  return jspb.Message.getField(this, 14) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cs3.storageproviderv0alpha.CanonicalMetadata.prototype.toObject = function(opt_includeInstance) {
  return proto.cs3.storageproviderv0alpha.CanonicalMetadata.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cs3.storageproviderv0alpha.CanonicalMetadata} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cs3.storageproviderv0alpha.CanonicalMetadata.toObject = function(includeInstance, msg) {
  var f, obj = {
    target: (f = msg.getTarget()) && proto.cs3.storageproviderv0alpha.Reference.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cs3.storageproviderv0alpha.CanonicalMetadata}
 */
proto.cs3.storageproviderv0alpha.CanonicalMetadata.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cs3.storageproviderv0alpha.CanonicalMetadata;
  return proto.cs3.storageproviderv0alpha.CanonicalMetadata.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cs3.storageproviderv0alpha.CanonicalMetadata} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cs3.storageproviderv0alpha.CanonicalMetadata}
 */
proto.cs3.storageproviderv0alpha.CanonicalMetadata.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.cs3.storageproviderv0alpha.Reference;
      reader.readMessage(value,proto.cs3.storageproviderv0alpha.Reference.deserializeBinaryFromReader);
      msg.setTarget(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cs3.storageproviderv0alpha.CanonicalMetadata.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cs3.storageproviderv0alpha.CanonicalMetadata.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cs3.storageproviderv0alpha.CanonicalMetadata} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cs3.storageproviderv0alpha.CanonicalMetadata.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTarget();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.cs3.storageproviderv0alpha.Reference.serializeBinaryToWriter
    );
  }
};


/**
 * optional Reference target = 1;
 * @return {?proto.cs3.storageproviderv0alpha.Reference}
 */
proto.cs3.storageproviderv0alpha.CanonicalMetadata.prototype.getTarget = function() {
  return /** @type{?proto.cs3.storageproviderv0alpha.Reference} */ (
    jspb.Message.getWrapperField(this, proto.cs3.storageproviderv0alpha.Reference, 1));
};


/** @param {?proto.cs3.storageproviderv0alpha.Reference|undefined} value */
proto.cs3.storageproviderv0alpha.CanonicalMetadata.prototype.setTarget = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.cs3.storageproviderv0alpha.CanonicalMetadata.prototype.clearTarget = function() {
  this.setTarget(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cs3.storageproviderv0alpha.CanonicalMetadata.prototype.hasTarget = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cs3.storageproviderv0alpha.ArbitraryMetadata.prototype.toObject = function(opt_includeInstance) {
  return proto.cs3.storageproviderv0alpha.ArbitraryMetadata.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cs3.storageproviderv0alpha.ArbitraryMetadata} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cs3.storageproviderv0alpha.ArbitraryMetadata.toObject = function(includeInstance, msg) {
  var f, obj = {
    metadataMap: (f = msg.getMetadataMap()) ? f.toObject(includeInstance, undefined) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cs3.storageproviderv0alpha.ArbitraryMetadata}
 */
proto.cs3.storageproviderv0alpha.ArbitraryMetadata.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cs3.storageproviderv0alpha.ArbitraryMetadata;
  return proto.cs3.storageproviderv0alpha.ArbitraryMetadata.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cs3.storageproviderv0alpha.ArbitraryMetadata} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cs3.storageproviderv0alpha.ArbitraryMetadata}
 */
proto.cs3.storageproviderv0alpha.ArbitraryMetadata.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = msg.getMetadataMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "");
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cs3.storageproviderv0alpha.ArbitraryMetadata.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cs3.storageproviderv0alpha.ArbitraryMetadata.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cs3.storageproviderv0alpha.ArbitraryMetadata} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cs3.storageproviderv0alpha.ArbitraryMetadata.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMetadataMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(1, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
};


/**
 * map<string, string> metadata = 1;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.cs3.storageproviderv0alpha.ArbitraryMetadata.prototype.getMetadataMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 1, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 */
proto.cs3.storageproviderv0alpha.ArbitraryMetadata.prototype.clearMetadataMap = function() {
  this.getMetadataMap().clear();
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cs3.storageproviderv0alpha.ResourceChecksum.prototype.toObject = function(opt_includeInstance) {
  return proto.cs3.storageproviderv0alpha.ResourceChecksum.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cs3.storageproviderv0alpha.ResourceChecksum} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cs3.storageproviderv0alpha.ResourceChecksum.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: jspb.Message.getFieldWithDefault(msg, 1, 0),
    sum: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cs3.storageproviderv0alpha.ResourceChecksum}
 */
proto.cs3.storageproviderv0alpha.ResourceChecksum.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cs3.storageproviderv0alpha.ResourceChecksum;
  return proto.cs3.storageproviderv0alpha.ResourceChecksum.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cs3.storageproviderv0alpha.ResourceChecksum} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cs3.storageproviderv0alpha.ResourceChecksum}
 */
proto.cs3.storageproviderv0alpha.ResourceChecksum.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.cs3.storageproviderv0alpha.ResourceChecksumType} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSum(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cs3.storageproviderv0alpha.ResourceChecksum.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cs3.storageproviderv0alpha.ResourceChecksum.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cs3.storageproviderv0alpha.ResourceChecksum} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cs3.storageproviderv0alpha.ResourceChecksum.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getSum();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional ResourceChecksumType type = 1;
 * @return {!proto.cs3.storageproviderv0alpha.ResourceChecksumType}
 */
proto.cs3.storageproviderv0alpha.ResourceChecksum.prototype.getType = function() {
  return /** @type {!proto.cs3.storageproviderv0alpha.ResourceChecksumType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {!proto.cs3.storageproviderv0alpha.ResourceChecksumType} value */
proto.cs3.storageproviderv0alpha.ResourceChecksum.prototype.setType = function(value) {
  jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional string sum = 2;
 * @return {string}
 */
proto.cs3.storageproviderv0alpha.ResourceChecksum.prototype.getSum = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.cs3.storageproviderv0alpha.ResourceChecksum.prototype.setSum = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cs3.storageproviderv0alpha.ResourceChecksumPriority.prototype.toObject = function(opt_includeInstance) {
  return proto.cs3.storageproviderv0alpha.ResourceChecksumPriority.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cs3.storageproviderv0alpha.ResourceChecksumPriority} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cs3.storageproviderv0alpha.ResourceChecksumPriority.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: jspb.Message.getFieldWithDefault(msg, 1, 0),
    priority: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cs3.storageproviderv0alpha.ResourceChecksumPriority}
 */
proto.cs3.storageproviderv0alpha.ResourceChecksumPriority.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cs3.storageproviderv0alpha.ResourceChecksumPriority;
  return proto.cs3.storageproviderv0alpha.ResourceChecksumPriority.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cs3.storageproviderv0alpha.ResourceChecksumPriority} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cs3.storageproviderv0alpha.ResourceChecksumPriority}
 */
proto.cs3.storageproviderv0alpha.ResourceChecksumPriority.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.cs3.storageproviderv0alpha.ResourceChecksumType} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPriority(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cs3.storageproviderv0alpha.ResourceChecksumPriority.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cs3.storageproviderv0alpha.ResourceChecksumPriority.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cs3.storageproviderv0alpha.ResourceChecksumPriority} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cs3.storageproviderv0alpha.ResourceChecksumPriority.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getPriority();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
};


/**
 * optional ResourceChecksumType type = 1;
 * @return {!proto.cs3.storageproviderv0alpha.ResourceChecksumType}
 */
proto.cs3.storageproviderv0alpha.ResourceChecksumPriority.prototype.getType = function() {
  return /** @type {!proto.cs3.storageproviderv0alpha.ResourceChecksumType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {!proto.cs3.storageproviderv0alpha.ResourceChecksumType} value */
proto.cs3.storageproviderv0alpha.ResourceChecksumPriority.prototype.setType = function(value) {
  jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional uint32 priority = 2;
 * @return {number}
 */
proto.cs3.storageproviderv0alpha.ResourceChecksumPriority.prototype.getPriority = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.cs3.storageproviderv0alpha.ResourceChecksumPriority.prototype.setPriority = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.cs3.storageproviderv0alpha.Reference.oneofGroups_ = [[1,2]];

/**
 * @enum {number}
 */
proto.cs3.storageproviderv0alpha.Reference.SpecCase = {
  SPEC_NOT_SET: 0,
  PATH: 1,
  ID: 2
};

/**
 * @return {proto.cs3.storageproviderv0alpha.Reference.SpecCase}
 */
proto.cs3.storageproviderv0alpha.Reference.prototype.getSpecCase = function() {
  return /** @type {proto.cs3.storageproviderv0alpha.Reference.SpecCase} */(jspb.Message.computeOneofCase(this, proto.cs3.storageproviderv0alpha.Reference.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cs3.storageproviderv0alpha.Reference.prototype.toObject = function(opt_includeInstance) {
  return proto.cs3.storageproviderv0alpha.Reference.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cs3.storageproviderv0alpha.Reference} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cs3.storageproviderv0alpha.Reference.toObject = function(includeInstance, msg) {
  var f, obj = {
    path: jspb.Message.getFieldWithDefault(msg, 1, ""),
    id: (f = msg.getId()) && proto.cs3.storageproviderv0alpha.ResourceId.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cs3.storageproviderv0alpha.Reference}
 */
proto.cs3.storageproviderv0alpha.Reference.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cs3.storageproviderv0alpha.Reference;
  return proto.cs3.storageproviderv0alpha.Reference.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cs3.storageproviderv0alpha.Reference} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cs3.storageproviderv0alpha.Reference}
 */
proto.cs3.storageproviderv0alpha.Reference.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPath(value);
      break;
    case 2:
      var value = new proto.cs3.storageproviderv0alpha.ResourceId;
      reader.readMessage(value,proto.cs3.storageproviderv0alpha.ResourceId.deserializeBinaryFromReader);
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cs3.storageproviderv0alpha.Reference.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cs3.storageproviderv0alpha.Reference.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cs3.storageproviderv0alpha.Reference} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cs3.storageproviderv0alpha.Reference.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getId();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.cs3.storageproviderv0alpha.ResourceId.serializeBinaryToWriter
    );
  }
};


/**
 * optional string path = 1;
 * @return {string}
 */
proto.cs3.storageproviderv0alpha.Reference.prototype.getPath = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.cs3.storageproviderv0alpha.Reference.prototype.setPath = function(value) {
  jspb.Message.setOneofField(this, 1, proto.cs3.storageproviderv0alpha.Reference.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 */
proto.cs3.storageproviderv0alpha.Reference.prototype.clearPath = function() {
  jspb.Message.setOneofField(this, 1, proto.cs3.storageproviderv0alpha.Reference.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cs3.storageproviderv0alpha.Reference.prototype.hasPath = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional ResourceId id = 2;
 * @return {?proto.cs3.storageproviderv0alpha.ResourceId}
 */
proto.cs3.storageproviderv0alpha.Reference.prototype.getId = function() {
  return /** @type{?proto.cs3.storageproviderv0alpha.ResourceId} */ (
    jspb.Message.getWrapperField(this, proto.cs3.storageproviderv0alpha.ResourceId, 2));
};


/** @param {?proto.cs3.storageproviderv0alpha.ResourceId|undefined} value */
proto.cs3.storageproviderv0alpha.Reference.prototype.setId = function(value) {
  jspb.Message.setOneofWrapperField(this, 2, proto.cs3.storageproviderv0alpha.Reference.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 */
proto.cs3.storageproviderv0alpha.Reference.prototype.clearId = function() {
  this.setId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cs3.storageproviderv0alpha.Reference.prototype.hasId = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cs3.storageproviderv0alpha.ResourceId.prototype.toObject = function(opt_includeInstance) {
  return proto.cs3.storageproviderv0alpha.ResourceId.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cs3.storageproviderv0alpha.ResourceId} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cs3.storageproviderv0alpha.ResourceId.toObject = function(includeInstance, msg) {
  var f, obj = {
    storageId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    opaqueId: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cs3.storageproviderv0alpha.ResourceId}
 */
proto.cs3.storageproviderv0alpha.ResourceId.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cs3.storageproviderv0alpha.ResourceId;
  return proto.cs3.storageproviderv0alpha.ResourceId.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cs3.storageproviderv0alpha.ResourceId} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cs3.storageproviderv0alpha.ResourceId}
 */
proto.cs3.storageproviderv0alpha.ResourceId.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setStorageId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setOpaqueId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cs3.storageproviderv0alpha.ResourceId.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cs3.storageproviderv0alpha.ResourceId.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cs3.storageproviderv0alpha.ResourceId} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cs3.storageproviderv0alpha.ResourceId.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStorageId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getOpaqueId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string storage_id = 1;
 * @return {string}
 */
proto.cs3.storageproviderv0alpha.ResourceId.prototype.getStorageId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.cs3.storageproviderv0alpha.ResourceId.prototype.setStorageId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string opaque_id = 2;
 * @return {string}
 */
proto.cs3.storageproviderv0alpha.ResourceId.prototype.getOpaqueId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.cs3.storageproviderv0alpha.ResourceId.prototype.setOpaqueId = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cs3.storageproviderv0alpha.ResourcePermissions.prototype.toObject = function(opt_includeInstance) {
  return proto.cs3.storageproviderv0alpha.ResourcePermissions.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cs3.storageproviderv0alpha.ResourcePermissions} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cs3.storageproviderv0alpha.ResourcePermissions.toObject = function(includeInstance, msg) {
  var f, obj = {
    addGrant: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    createContainer: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
    pb_delete: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
    getPath: jspb.Message.getBooleanFieldWithDefault(msg, 5, false),
    getQuota: jspb.Message.getBooleanFieldWithDefault(msg, 6, false),
    initiateFileDownload: jspb.Message.getBooleanFieldWithDefault(msg, 7, false),
    initiateFileUpload: jspb.Message.getBooleanFieldWithDefault(msg, 8, false),
    listGrants: jspb.Message.getBooleanFieldWithDefault(msg, 9, false),
    listContainer: jspb.Message.getBooleanFieldWithDefault(msg, 10, false),
    listFileVersions: jspb.Message.getBooleanFieldWithDefault(msg, 11, false),
    listRecycle: jspb.Message.getBooleanFieldWithDefault(msg, 12, false),
    move: jspb.Message.getBooleanFieldWithDefault(msg, 13, false),
    removeGrant: jspb.Message.getBooleanFieldWithDefault(msg, 14, false),
    purgeRecycle: jspb.Message.getBooleanFieldWithDefault(msg, 15, false),
    restoreFileVersion: jspb.Message.getBooleanFieldWithDefault(msg, 16, false),
    restoreRecycleItem: jspb.Message.getBooleanFieldWithDefault(msg, 17, false),
    stat: jspb.Message.getBooleanFieldWithDefault(msg, 18, false),
    updateGrant: jspb.Message.getBooleanFieldWithDefault(msg, 19, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cs3.storageproviderv0alpha.ResourcePermissions}
 */
proto.cs3.storageproviderv0alpha.ResourcePermissions.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cs3.storageproviderv0alpha.ResourcePermissions;
  return proto.cs3.storageproviderv0alpha.ResourcePermissions.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cs3.storageproviderv0alpha.ResourcePermissions} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cs3.storageproviderv0alpha.ResourcePermissions}
 */
proto.cs3.storageproviderv0alpha.ResourcePermissions.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAddGrant(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setCreateContainer(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setDelete(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setGetPath(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setGetQuota(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setInitiateFileDownload(value);
      break;
    case 8:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setInitiateFileUpload(value);
      break;
    case 9:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setListGrants(value);
      break;
    case 10:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setListContainer(value);
      break;
    case 11:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setListFileVersions(value);
      break;
    case 12:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setListRecycle(value);
      break;
    case 13:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setMove(value);
      break;
    case 14:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setRemoveGrant(value);
      break;
    case 15:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setPurgeRecycle(value);
      break;
    case 16:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setRestoreFileVersion(value);
      break;
    case 17:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setRestoreRecycleItem(value);
      break;
    case 18:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setStat(value);
      break;
    case 19:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setUpdateGrant(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cs3.storageproviderv0alpha.ResourcePermissions.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cs3.storageproviderv0alpha.ResourcePermissions.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cs3.storageproviderv0alpha.ResourcePermissions} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cs3.storageproviderv0alpha.ResourcePermissions.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAddGrant();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getCreateContainer();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getDelete();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getGetPath();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
  f = message.getGetQuota();
  if (f) {
    writer.writeBool(
      6,
      f
    );
  }
  f = message.getInitiateFileDownload();
  if (f) {
    writer.writeBool(
      7,
      f
    );
  }
  f = message.getInitiateFileUpload();
  if (f) {
    writer.writeBool(
      8,
      f
    );
  }
  f = message.getListGrants();
  if (f) {
    writer.writeBool(
      9,
      f
    );
  }
  f = message.getListContainer();
  if (f) {
    writer.writeBool(
      10,
      f
    );
  }
  f = message.getListFileVersions();
  if (f) {
    writer.writeBool(
      11,
      f
    );
  }
  f = message.getListRecycle();
  if (f) {
    writer.writeBool(
      12,
      f
    );
  }
  f = message.getMove();
  if (f) {
    writer.writeBool(
      13,
      f
    );
  }
  f = message.getRemoveGrant();
  if (f) {
    writer.writeBool(
      14,
      f
    );
  }
  f = message.getPurgeRecycle();
  if (f) {
    writer.writeBool(
      15,
      f
    );
  }
  f = message.getRestoreFileVersion();
  if (f) {
    writer.writeBool(
      16,
      f
    );
  }
  f = message.getRestoreRecycleItem();
  if (f) {
    writer.writeBool(
      17,
      f
    );
  }
  f = message.getStat();
  if (f) {
    writer.writeBool(
      18,
      f
    );
  }
  f = message.getUpdateGrant();
  if (f) {
    writer.writeBool(
      19,
      f
    );
  }
};


/**
 * optional bool add_grant = 1;
 * @return {boolean}
 */
proto.cs3.storageproviderv0alpha.ResourcePermissions.prototype.getAddGrant = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/** @param {boolean} value */
proto.cs3.storageproviderv0alpha.ResourcePermissions.prototype.setAddGrant = function(value) {
  jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional bool create_container = 2;
 * @return {boolean}
 */
proto.cs3.storageproviderv0alpha.ResourcePermissions.prototype.getCreateContainer = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/** @param {boolean} value */
proto.cs3.storageproviderv0alpha.ResourcePermissions.prototype.setCreateContainer = function(value) {
  jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional bool delete = 3;
 * @return {boolean}
 */
proto.cs3.storageproviderv0alpha.ResourcePermissions.prototype.getDelete = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/** @param {boolean} value */
proto.cs3.storageproviderv0alpha.ResourcePermissions.prototype.setDelete = function(value) {
  jspb.Message.setProto3BooleanField(this, 3, value);
};


/**
 * optional bool get_path = 5;
 * @return {boolean}
 */
proto.cs3.storageproviderv0alpha.ResourcePermissions.prototype.getGetPath = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/** @param {boolean} value */
proto.cs3.storageproviderv0alpha.ResourcePermissions.prototype.setGetPath = function(value) {
  jspb.Message.setProto3BooleanField(this, 5, value);
};


/**
 * optional bool get_quota = 6;
 * @return {boolean}
 */
proto.cs3.storageproviderv0alpha.ResourcePermissions.prototype.getGetQuota = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/** @param {boolean} value */
proto.cs3.storageproviderv0alpha.ResourcePermissions.prototype.setGetQuota = function(value) {
  jspb.Message.setProto3BooleanField(this, 6, value);
};


/**
 * optional bool initiate_file_download = 7;
 * @return {boolean}
 */
proto.cs3.storageproviderv0alpha.ResourcePermissions.prototype.getInitiateFileDownload = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 7, false));
};


/** @param {boolean} value */
proto.cs3.storageproviderv0alpha.ResourcePermissions.prototype.setInitiateFileDownload = function(value) {
  jspb.Message.setProto3BooleanField(this, 7, value);
};


/**
 * optional bool initiate_file_upload = 8;
 * @return {boolean}
 */
proto.cs3.storageproviderv0alpha.ResourcePermissions.prototype.getInitiateFileUpload = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 8, false));
};


/** @param {boolean} value */
proto.cs3.storageproviderv0alpha.ResourcePermissions.prototype.setInitiateFileUpload = function(value) {
  jspb.Message.setProto3BooleanField(this, 8, value);
};


/**
 * optional bool list_grants = 9;
 * @return {boolean}
 */
proto.cs3.storageproviderv0alpha.ResourcePermissions.prototype.getListGrants = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 9, false));
};


/** @param {boolean} value */
proto.cs3.storageproviderv0alpha.ResourcePermissions.prototype.setListGrants = function(value) {
  jspb.Message.setProto3BooleanField(this, 9, value);
};


/**
 * optional bool list_container = 10;
 * @return {boolean}
 */
proto.cs3.storageproviderv0alpha.ResourcePermissions.prototype.getListContainer = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 10, false));
};


/** @param {boolean} value */
proto.cs3.storageproviderv0alpha.ResourcePermissions.prototype.setListContainer = function(value) {
  jspb.Message.setProto3BooleanField(this, 10, value);
};


/**
 * optional bool list_file_versions = 11;
 * @return {boolean}
 */
proto.cs3.storageproviderv0alpha.ResourcePermissions.prototype.getListFileVersions = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 11, false));
};


/** @param {boolean} value */
proto.cs3.storageproviderv0alpha.ResourcePermissions.prototype.setListFileVersions = function(value) {
  jspb.Message.setProto3BooleanField(this, 11, value);
};


/**
 * optional bool list_recycle = 12;
 * @return {boolean}
 */
proto.cs3.storageproviderv0alpha.ResourcePermissions.prototype.getListRecycle = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 12, false));
};


/** @param {boolean} value */
proto.cs3.storageproviderv0alpha.ResourcePermissions.prototype.setListRecycle = function(value) {
  jspb.Message.setProto3BooleanField(this, 12, value);
};


/**
 * optional bool move = 13;
 * @return {boolean}
 */
proto.cs3.storageproviderv0alpha.ResourcePermissions.prototype.getMove = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 13, false));
};


/** @param {boolean} value */
proto.cs3.storageproviderv0alpha.ResourcePermissions.prototype.setMove = function(value) {
  jspb.Message.setProto3BooleanField(this, 13, value);
};


/**
 * optional bool remove_grant = 14;
 * @return {boolean}
 */
proto.cs3.storageproviderv0alpha.ResourcePermissions.prototype.getRemoveGrant = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 14, false));
};


/** @param {boolean} value */
proto.cs3.storageproviderv0alpha.ResourcePermissions.prototype.setRemoveGrant = function(value) {
  jspb.Message.setProto3BooleanField(this, 14, value);
};


/**
 * optional bool purge_recycle = 15;
 * @return {boolean}
 */
proto.cs3.storageproviderv0alpha.ResourcePermissions.prototype.getPurgeRecycle = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 15, false));
};


/** @param {boolean} value */
proto.cs3.storageproviderv0alpha.ResourcePermissions.prototype.setPurgeRecycle = function(value) {
  jspb.Message.setProto3BooleanField(this, 15, value);
};


/**
 * optional bool restore_file_version = 16;
 * @return {boolean}
 */
proto.cs3.storageproviderv0alpha.ResourcePermissions.prototype.getRestoreFileVersion = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 16, false));
};


/** @param {boolean} value */
proto.cs3.storageproviderv0alpha.ResourcePermissions.prototype.setRestoreFileVersion = function(value) {
  jspb.Message.setProto3BooleanField(this, 16, value);
};


/**
 * optional bool restore_recycle_item = 17;
 * @return {boolean}
 */
proto.cs3.storageproviderv0alpha.ResourcePermissions.prototype.getRestoreRecycleItem = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 17, false));
};


/** @param {boolean} value */
proto.cs3.storageproviderv0alpha.ResourcePermissions.prototype.setRestoreRecycleItem = function(value) {
  jspb.Message.setProto3BooleanField(this, 17, value);
};


/**
 * optional bool stat = 18;
 * @return {boolean}
 */
proto.cs3.storageproviderv0alpha.ResourcePermissions.prototype.getStat = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 18, false));
};


/** @param {boolean} value */
proto.cs3.storageproviderv0alpha.ResourcePermissions.prototype.setStat = function(value) {
  jspb.Message.setProto3BooleanField(this, 18, value);
};


/**
 * optional bool update_grant = 19;
 * @return {boolean}
 */
proto.cs3.storageproviderv0alpha.ResourcePermissions.prototype.getUpdateGrant = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 19, false));
};


/** @param {boolean} value */
proto.cs3.storageproviderv0alpha.ResourcePermissions.prototype.setUpdateGrant = function(value) {
  jspb.Message.setProto3BooleanField(this, 19, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cs3.storageproviderv0alpha.Grant.prototype.toObject = function(opt_includeInstance) {
  return proto.cs3.storageproviderv0alpha.Grant.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cs3.storageproviderv0alpha.Grant} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cs3.storageproviderv0alpha.Grant.toObject = function(includeInstance, msg) {
  var f, obj = {
    grantee: (f = msg.getGrantee()) && proto.cs3.storageproviderv0alpha.Grantee.toObject(includeInstance, f),
    permissions: (f = msg.getPermissions()) && proto.cs3.storageproviderv0alpha.ResourcePermissions.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cs3.storageproviderv0alpha.Grant}
 */
proto.cs3.storageproviderv0alpha.Grant.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cs3.storageproviderv0alpha.Grant;
  return proto.cs3.storageproviderv0alpha.Grant.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cs3.storageproviderv0alpha.Grant} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cs3.storageproviderv0alpha.Grant}
 */
proto.cs3.storageproviderv0alpha.Grant.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.cs3.storageproviderv0alpha.Grantee;
      reader.readMessage(value,proto.cs3.storageproviderv0alpha.Grantee.deserializeBinaryFromReader);
      msg.setGrantee(value);
      break;
    case 2:
      var value = new proto.cs3.storageproviderv0alpha.ResourcePermissions;
      reader.readMessage(value,proto.cs3.storageproviderv0alpha.ResourcePermissions.deserializeBinaryFromReader);
      msg.setPermissions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cs3.storageproviderv0alpha.Grant.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cs3.storageproviderv0alpha.Grant.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cs3.storageproviderv0alpha.Grant} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cs3.storageproviderv0alpha.Grant.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGrantee();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.cs3.storageproviderv0alpha.Grantee.serializeBinaryToWriter
    );
  }
  f = message.getPermissions();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.cs3.storageproviderv0alpha.ResourcePermissions.serializeBinaryToWriter
    );
  }
};


/**
 * optional Grantee grantee = 1;
 * @return {?proto.cs3.storageproviderv0alpha.Grantee}
 */
proto.cs3.storageproviderv0alpha.Grant.prototype.getGrantee = function() {
  return /** @type{?proto.cs3.storageproviderv0alpha.Grantee} */ (
    jspb.Message.getWrapperField(this, proto.cs3.storageproviderv0alpha.Grantee, 1));
};


/** @param {?proto.cs3.storageproviderv0alpha.Grantee|undefined} value */
proto.cs3.storageproviderv0alpha.Grant.prototype.setGrantee = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.cs3.storageproviderv0alpha.Grant.prototype.clearGrantee = function() {
  this.setGrantee(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cs3.storageproviderv0alpha.Grant.prototype.hasGrantee = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional ResourcePermissions permissions = 2;
 * @return {?proto.cs3.storageproviderv0alpha.ResourcePermissions}
 */
proto.cs3.storageproviderv0alpha.Grant.prototype.getPermissions = function() {
  return /** @type{?proto.cs3.storageproviderv0alpha.ResourcePermissions} */ (
    jspb.Message.getWrapperField(this, proto.cs3.storageproviderv0alpha.ResourcePermissions, 2));
};


/** @param {?proto.cs3.storageproviderv0alpha.ResourcePermissions|undefined} value */
proto.cs3.storageproviderv0alpha.Grant.prototype.setPermissions = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.cs3.storageproviderv0alpha.Grant.prototype.clearPermissions = function() {
  this.setPermissions(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cs3.storageproviderv0alpha.Grant.prototype.hasPermissions = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cs3.storageproviderv0alpha.Grantee.prototype.toObject = function(opt_includeInstance) {
  return proto.cs3.storageproviderv0alpha.Grantee.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cs3.storageproviderv0alpha.Grantee} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cs3.storageproviderv0alpha.Grantee.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: jspb.Message.getFieldWithDefault(msg, 1, 0),
    id: (f = msg.getId()) && cs3_types_types_pb.UserId.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cs3.storageproviderv0alpha.Grantee}
 */
proto.cs3.storageproviderv0alpha.Grantee.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cs3.storageproviderv0alpha.Grantee;
  return proto.cs3.storageproviderv0alpha.Grantee.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cs3.storageproviderv0alpha.Grantee} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cs3.storageproviderv0alpha.Grantee}
 */
proto.cs3.storageproviderv0alpha.Grantee.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.cs3.storageproviderv0alpha.GranteeType} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 2:
      var value = new cs3_types_types_pb.UserId;
      reader.readMessage(value,cs3_types_types_pb.UserId.deserializeBinaryFromReader);
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cs3.storageproviderv0alpha.Grantee.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cs3.storageproviderv0alpha.Grantee.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cs3.storageproviderv0alpha.Grantee} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cs3.storageproviderv0alpha.Grantee.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getId();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      cs3_types_types_pb.UserId.serializeBinaryToWriter
    );
  }
};


/**
 * optional GranteeType type = 1;
 * @return {!proto.cs3.storageproviderv0alpha.GranteeType}
 */
proto.cs3.storageproviderv0alpha.Grantee.prototype.getType = function() {
  return /** @type {!proto.cs3.storageproviderv0alpha.GranteeType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {!proto.cs3.storageproviderv0alpha.GranteeType} value */
proto.cs3.storageproviderv0alpha.Grantee.prototype.setType = function(value) {
  jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional cs3.types.UserId id = 2;
 * @return {?proto.cs3.types.UserId}
 */
proto.cs3.storageproviderv0alpha.Grantee.prototype.getId = function() {
  return /** @type{?proto.cs3.types.UserId} */ (
    jspb.Message.getWrapperField(this, cs3_types_types_pb.UserId, 2));
};


/** @param {?proto.cs3.types.UserId|undefined} value */
proto.cs3.storageproviderv0alpha.Grantee.prototype.setId = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.cs3.storageproviderv0alpha.Grantee.prototype.clearId = function() {
  this.setId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cs3.storageproviderv0alpha.Grantee.prototype.hasId = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cs3.storageproviderv0alpha.FileVersion.prototype.toObject = function(opt_includeInstance) {
  return proto.cs3.storageproviderv0alpha.FileVersion.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cs3.storageproviderv0alpha.FileVersion} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cs3.storageproviderv0alpha.FileVersion.toObject = function(includeInstance, msg) {
  var f, obj = {
    opaque: (f = msg.getOpaque()) && cs3_types_types_pb.Opaque.toObject(includeInstance, f),
    key: jspb.Message.getFieldWithDefault(msg, 3, ""),
    size: jspb.Message.getFieldWithDefault(msg, 4, 0),
    mtime: jspb.Message.getFieldWithDefault(msg, 5, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cs3.storageproviderv0alpha.FileVersion}
 */
proto.cs3.storageproviderv0alpha.FileVersion.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cs3.storageproviderv0alpha.FileVersion;
  return proto.cs3.storageproviderv0alpha.FileVersion.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cs3.storageproviderv0alpha.FileVersion} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cs3.storageproviderv0alpha.FileVersion}
 */
proto.cs3.storageproviderv0alpha.FileVersion.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new cs3_types_types_pb.Opaque;
      reader.readMessage(value,cs3_types_types_pb.Opaque.deserializeBinaryFromReader);
      msg.setOpaque(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setKey(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setSize(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setMtime(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cs3.storageproviderv0alpha.FileVersion.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cs3.storageproviderv0alpha.FileVersion.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cs3.storageproviderv0alpha.FileVersion} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cs3.storageproviderv0alpha.FileVersion.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOpaque();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      cs3_types_types_pb.Opaque.serializeBinaryToWriter
    );
  }
  f = message.getKey();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getSize();
  if (f !== 0) {
    writer.writeUint64(
      4,
      f
    );
  }
  f = message.getMtime();
  if (f !== 0) {
    writer.writeUint64(
      5,
      f
    );
  }
};


/**
 * optional cs3.types.Opaque opaque = 1;
 * @return {?proto.cs3.types.Opaque}
 */
proto.cs3.storageproviderv0alpha.FileVersion.prototype.getOpaque = function() {
  return /** @type{?proto.cs3.types.Opaque} */ (
    jspb.Message.getWrapperField(this, cs3_types_types_pb.Opaque, 1));
};


/** @param {?proto.cs3.types.Opaque|undefined} value */
proto.cs3.storageproviderv0alpha.FileVersion.prototype.setOpaque = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.cs3.storageproviderv0alpha.FileVersion.prototype.clearOpaque = function() {
  this.setOpaque(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cs3.storageproviderv0alpha.FileVersion.prototype.hasOpaque = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string key = 3;
 * @return {string}
 */
proto.cs3.storageproviderv0alpha.FileVersion.prototype.getKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.cs3.storageproviderv0alpha.FileVersion.prototype.setKey = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional uint64 size = 4;
 * @return {number}
 */
proto.cs3.storageproviderv0alpha.FileVersion.prototype.getSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.cs3.storageproviderv0alpha.FileVersion.prototype.setSize = function(value) {
  jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional uint64 mtime = 5;
 * @return {number}
 */
proto.cs3.storageproviderv0alpha.FileVersion.prototype.getMtime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {number} value */
proto.cs3.storageproviderv0alpha.FileVersion.prototype.setMtime = function(value) {
  jspb.Message.setProto3IntField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cs3.storageproviderv0alpha.RecycleItem.prototype.toObject = function(opt_includeInstance) {
  return proto.cs3.storageproviderv0alpha.RecycleItem.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cs3.storageproviderv0alpha.RecycleItem} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cs3.storageproviderv0alpha.RecycleItem.toObject = function(includeInstance, msg) {
  var f, obj = {
    opaque: (f = msg.getOpaque()) && cs3_types_types_pb.Opaque.toObject(includeInstance, f),
    type: jspb.Message.getFieldWithDefault(msg, 2, 0),
    key: jspb.Message.getFieldWithDefault(msg, 3, ""),
    path: jspb.Message.getFieldWithDefault(msg, 4, ""),
    size: jspb.Message.getFieldWithDefault(msg, 5, 0),
    deletionTime: (f = msg.getDeletionTime()) && cs3_types_types_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cs3.storageproviderv0alpha.RecycleItem}
 */
proto.cs3.storageproviderv0alpha.RecycleItem.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cs3.storageproviderv0alpha.RecycleItem;
  return proto.cs3.storageproviderv0alpha.RecycleItem.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cs3.storageproviderv0alpha.RecycleItem} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cs3.storageproviderv0alpha.RecycleItem}
 */
proto.cs3.storageproviderv0alpha.RecycleItem.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new cs3_types_types_pb.Opaque;
      reader.readMessage(value,cs3_types_types_pb.Opaque.deserializeBinaryFromReader);
      msg.setOpaque(value);
      break;
    case 2:
      var value = /** @type {!proto.cs3.storageproviderv0alpha.ResourceType} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setKey(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setPath(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setSize(value);
      break;
    case 6:
      var value = new cs3_types_types_pb.Timestamp;
      reader.readMessage(value,cs3_types_types_pb.Timestamp.deserializeBinaryFromReader);
      msg.setDeletionTime(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cs3.storageproviderv0alpha.RecycleItem.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cs3.storageproviderv0alpha.RecycleItem.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cs3.storageproviderv0alpha.RecycleItem} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cs3.storageproviderv0alpha.RecycleItem.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOpaque();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      cs3_types_types_pb.Opaque.serializeBinaryToWriter
    );
  }
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getKey();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getPath();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getSize();
  if (f !== 0) {
    writer.writeUint64(
      5,
      f
    );
  }
  f = message.getDeletionTime();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      cs3_types_types_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * optional cs3.types.Opaque opaque = 1;
 * @return {?proto.cs3.types.Opaque}
 */
proto.cs3.storageproviderv0alpha.RecycleItem.prototype.getOpaque = function() {
  return /** @type{?proto.cs3.types.Opaque} */ (
    jspb.Message.getWrapperField(this, cs3_types_types_pb.Opaque, 1));
};


/** @param {?proto.cs3.types.Opaque|undefined} value */
proto.cs3.storageproviderv0alpha.RecycleItem.prototype.setOpaque = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.cs3.storageproviderv0alpha.RecycleItem.prototype.clearOpaque = function() {
  this.setOpaque(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cs3.storageproviderv0alpha.RecycleItem.prototype.hasOpaque = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional ResourceType type = 2;
 * @return {!proto.cs3.storageproviderv0alpha.ResourceType}
 */
proto.cs3.storageproviderv0alpha.RecycleItem.prototype.getType = function() {
  return /** @type {!proto.cs3.storageproviderv0alpha.ResourceType} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {!proto.cs3.storageproviderv0alpha.ResourceType} value */
proto.cs3.storageproviderv0alpha.RecycleItem.prototype.setType = function(value) {
  jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional string key = 3;
 * @return {string}
 */
proto.cs3.storageproviderv0alpha.RecycleItem.prototype.getKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.cs3.storageproviderv0alpha.RecycleItem.prototype.setKey = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string path = 4;
 * @return {string}
 */
proto.cs3.storageproviderv0alpha.RecycleItem.prototype.getPath = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.cs3.storageproviderv0alpha.RecycleItem.prototype.setPath = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional uint64 size = 5;
 * @return {number}
 */
proto.cs3.storageproviderv0alpha.RecycleItem.prototype.getSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {number} value */
proto.cs3.storageproviderv0alpha.RecycleItem.prototype.setSize = function(value) {
  jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional cs3.types.Timestamp deletion_time = 6;
 * @return {?proto.cs3.types.Timestamp}
 */
proto.cs3.storageproviderv0alpha.RecycleItem.prototype.getDeletionTime = function() {
  return /** @type{?proto.cs3.types.Timestamp} */ (
    jspb.Message.getWrapperField(this, cs3_types_types_pb.Timestamp, 6));
};


/** @param {?proto.cs3.types.Timestamp|undefined} value */
proto.cs3.storageproviderv0alpha.RecycleItem.prototype.setDeletionTime = function(value) {
  jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.cs3.storageproviderv0alpha.RecycleItem.prototype.clearDeletionTime = function() {
  this.setDeletionTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cs3.storageproviderv0alpha.RecycleItem.prototype.hasDeletionTime = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * @enum {number}
 */
proto.cs3.storageproviderv0alpha.ResourceType = {
  RESOURCE_TYPE_INVALID: 0,
  RESOURCE_TYPE_FILE: 1,
  RESOURCE_TYPE_CONTAINER: 2,
  RESOURCE_TYPE_REFERENCE: 3,
  RESOURCE_TYPE_SYMLINK: 4,
  RESOURCE_TYPE_INTERNAL: 5
};

/**
 * @enum {number}
 */
proto.cs3.storageproviderv0alpha.ResourceChecksumType = {
  RESOURCE_CHECKSUM_TYPE_INVALID: 0,
  RESOURCE_CHECKSUM_TYPE_UNSET: 1,
  RESOURCE_CHECKSUM_TYPE_ADLER32: 2,
  RESOURCE_CHECKSUM_TYPE_MD5: 3,
  RESOURCE_CHECKSUM_TYPE_SHA1: 4
};

/**
 * @enum {number}
 */
proto.cs3.storageproviderv0alpha.GranteeType = {
  GRANTEE_TYPE_INVALID: 0,
  GRANTEE_TYPE_USER: 1,
  GRANTEE_TYPE_GROUP: 2
};

goog.object.extend(exports, proto.cs3.storageproviderv0alpha);
