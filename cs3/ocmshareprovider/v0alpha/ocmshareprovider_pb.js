// source: cs3/ocmshareprovider/v0alpha/ocmshareprovider.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var cs3_ocmshareprovider_v0alpha_resources_pb = require('../../../cs3/ocmshareprovider/v0alpha/resources_pb.js');
goog.object.extend(proto, cs3_ocmshareprovider_v0alpha_resources_pb);
var cs3_rpc_status_pb = require('../../../cs3/rpc/status_pb.js');
goog.object.extend(proto, cs3_rpc_status_pb);
var cs3_storageprovider_v0alpha_resources_pb = require('../../../cs3/storageprovider/v0alpha/resources_pb.js');
goog.object.extend(proto, cs3_storageprovider_v0alpha_resources_pb);
var cs3_types_types_pb = require('../../../cs3/types/types_pb.js');
goog.object.extend(proto, cs3_types_types_pb);
goog.exportSymbol('proto.cs3.ocmshareproviderv0alpha.CreateShareRequest', null, global);
goog.exportSymbol('proto.cs3.ocmshareproviderv0alpha.CreateShareResponse', null, global);
goog.exportSymbol('proto.cs3.ocmshareproviderv0alpha.GetShareRequest', null, global);
goog.exportSymbol('proto.cs3.ocmshareproviderv0alpha.GetShareResponse', null, global);
goog.exportSymbol('proto.cs3.ocmshareproviderv0alpha.ListReceivedSharesRequest', null, global);
goog.exportSymbol('proto.cs3.ocmshareproviderv0alpha.ListReceivedSharesResponse', null, global);
goog.exportSymbol('proto.cs3.ocmshareproviderv0alpha.ListSharesRequest', null, global);
goog.exportSymbol('proto.cs3.ocmshareproviderv0alpha.ListSharesRequest.Filter', null, global);
goog.exportSymbol('proto.cs3.ocmshareproviderv0alpha.ListSharesRequest.Filter.TermCase', null, global);
goog.exportSymbol('proto.cs3.ocmshareproviderv0alpha.ListSharesRequest.Filter.Type', null, global);
goog.exportSymbol('proto.cs3.ocmshareproviderv0alpha.ListSharesResponse', null, global);
goog.exportSymbol('proto.cs3.ocmshareproviderv0alpha.RemoveShareRequest', null, global);
goog.exportSymbol('proto.cs3.ocmshareproviderv0alpha.RemoveShareResponse', null, global);
goog.exportSymbol('proto.cs3.ocmshareproviderv0alpha.UpdateReceivedShareRequest', null, global);
goog.exportSymbol('proto.cs3.ocmshareproviderv0alpha.UpdateReceivedShareRequest.UpdateField', null, global);
goog.exportSymbol('proto.cs3.ocmshareproviderv0alpha.UpdateReceivedShareRequest.UpdateField.FieldCase', null, global);
goog.exportSymbol('proto.cs3.ocmshareproviderv0alpha.UpdateReceivedShareResponse', null, global);
goog.exportSymbol('proto.cs3.ocmshareproviderv0alpha.UpdateShareRequest', null, global);
goog.exportSymbol('proto.cs3.ocmshareproviderv0alpha.UpdateShareRequest.UpdateField', null, global);
goog.exportSymbol('proto.cs3.ocmshareproviderv0alpha.UpdateShareRequest.UpdateField.FieldCase', null, global);
goog.exportSymbol('proto.cs3.ocmshareproviderv0alpha.UpdateShareResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cs3.ocmshareproviderv0alpha.CreateShareRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cs3.ocmshareproviderv0alpha.CreateShareRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cs3.ocmshareproviderv0alpha.CreateShareRequest.displayName = 'proto.cs3.ocmshareproviderv0alpha.CreateShareRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cs3.ocmshareproviderv0alpha.CreateShareResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cs3.ocmshareproviderv0alpha.CreateShareResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cs3.ocmshareproviderv0alpha.CreateShareResponse.displayName = 'proto.cs3.ocmshareproviderv0alpha.CreateShareResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cs3.ocmshareproviderv0alpha.UpdateShareRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cs3.ocmshareproviderv0alpha.UpdateShareRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cs3.ocmshareproviderv0alpha.UpdateShareRequest.displayName = 'proto.cs3.ocmshareproviderv0alpha.UpdateShareRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cs3.ocmshareproviderv0alpha.UpdateShareRequest.UpdateField = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.cs3.ocmshareproviderv0alpha.UpdateShareRequest.UpdateField.oneofGroups_);
};
goog.inherits(proto.cs3.ocmshareproviderv0alpha.UpdateShareRequest.UpdateField, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cs3.ocmshareproviderv0alpha.UpdateShareRequest.UpdateField.displayName = 'proto.cs3.ocmshareproviderv0alpha.UpdateShareRequest.UpdateField';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cs3.ocmshareproviderv0alpha.UpdateShareResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cs3.ocmshareproviderv0alpha.UpdateShareResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cs3.ocmshareproviderv0alpha.UpdateShareResponse.displayName = 'proto.cs3.ocmshareproviderv0alpha.UpdateShareResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cs3.ocmshareproviderv0alpha.ListSharesRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cs3.ocmshareproviderv0alpha.ListSharesRequest.repeatedFields_, null);
};
goog.inherits(proto.cs3.ocmshareproviderv0alpha.ListSharesRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cs3.ocmshareproviderv0alpha.ListSharesRequest.displayName = 'proto.cs3.ocmshareproviderv0alpha.ListSharesRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cs3.ocmshareproviderv0alpha.ListSharesRequest.Filter = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.cs3.ocmshareproviderv0alpha.ListSharesRequest.Filter.oneofGroups_);
};
goog.inherits(proto.cs3.ocmshareproviderv0alpha.ListSharesRequest.Filter, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cs3.ocmshareproviderv0alpha.ListSharesRequest.Filter.displayName = 'proto.cs3.ocmshareproviderv0alpha.ListSharesRequest.Filter';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cs3.ocmshareproviderv0alpha.ListSharesResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cs3.ocmshareproviderv0alpha.ListSharesResponse.repeatedFields_, null);
};
goog.inherits(proto.cs3.ocmshareproviderv0alpha.ListSharesResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cs3.ocmshareproviderv0alpha.ListSharesResponse.displayName = 'proto.cs3.ocmshareproviderv0alpha.ListSharesResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cs3.ocmshareproviderv0alpha.RemoveShareRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cs3.ocmshareproviderv0alpha.RemoveShareRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cs3.ocmshareproviderv0alpha.RemoveShareRequest.displayName = 'proto.cs3.ocmshareproviderv0alpha.RemoveShareRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cs3.ocmshareproviderv0alpha.RemoveShareResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cs3.ocmshareproviderv0alpha.RemoveShareResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cs3.ocmshareproviderv0alpha.RemoveShareResponse.displayName = 'proto.cs3.ocmshareproviderv0alpha.RemoveShareResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cs3.ocmshareproviderv0alpha.GetShareRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cs3.ocmshareproviderv0alpha.GetShareRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cs3.ocmshareproviderv0alpha.GetShareRequest.displayName = 'proto.cs3.ocmshareproviderv0alpha.GetShareRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cs3.ocmshareproviderv0alpha.GetShareResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cs3.ocmshareproviderv0alpha.GetShareResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cs3.ocmshareproviderv0alpha.GetShareResponse.displayName = 'proto.cs3.ocmshareproviderv0alpha.GetShareResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cs3.ocmshareproviderv0alpha.ListReceivedSharesRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cs3.ocmshareproviderv0alpha.ListReceivedSharesRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cs3.ocmshareproviderv0alpha.ListReceivedSharesRequest.displayName = 'proto.cs3.ocmshareproviderv0alpha.ListReceivedSharesRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cs3.ocmshareproviderv0alpha.ListReceivedSharesResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cs3.ocmshareproviderv0alpha.ListReceivedSharesResponse.repeatedFields_, null);
};
goog.inherits(proto.cs3.ocmshareproviderv0alpha.ListReceivedSharesResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cs3.ocmshareproviderv0alpha.ListReceivedSharesResponse.displayName = 'proto.cs3.ocmshareproviderv0alpha.ListReceivedSharesResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cs3.ocmshareproviderv0alpha.UpdateReceivedShareRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cs3.ocmshareproviderv0alpha.UpdateReceivedShareRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cs3.ocmshareproviderv0alpha.UpdateReceivedShareRequest.displayName = 'proto.cs3.ocmshareproviderv0alpha.UpdateReceivedShareRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cs3.ocmshareproviderv0alpha.UpdateReceivedShareRequest.UpdateField = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.cs3.ocmshareproviderv0alpha.UpdateReceivedShareRequest.UpdateField.oneofGroups_);
};
goog.inherits(proto.cs3.ocmshareproviderv0alpha.UpdateReceivedShareRequest.UpdateField, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cs3.ocmshareproviderv0alpha.UpdateReceivedShareRequest.UpdateField.displayName = 'proto.cs3.ocmshareproviderv0alpha.UpdateReceivedShareRequest.UpdateField';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cs3.ocmshareproviderv0alpha.UpdateReceivedShareResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cs3.ocmshareproviderv0alpha.UpdateReceivedShareResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cs3.ocmshareproviderv0alpha.UpdateReceivedShareResponse.displayName = 'proto.cs3.ocmshareproviderv0alpha.UpdateReceivedShareResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cs3.ocmshareproviderv0alpha.CreateShareRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cs3.ocmshareproviderv0alpha.CreateShareRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cs3.ocmshareproviderv0alpha.CreateShareRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cs3.ocmshareproviderv0alpha.CreateShareRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    opaque: (f = msg.getOpaque()) && cs3_types_types_pb.Opaque.toObject(includeInstance, f),
    resourceId: (f = msg.getResourceId()) && cs3_storageprovider_v0alpha_resources_pb.ResourceId.toObject(includeInstance, f),
    grant: (f = msg.getGrant()) && cs3_ocmshareprovider_v0alpha_resources_pb.ShareGrant.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cs3.ocmshareproviderv0alpha.CreateShareRequest}
 */
proto.cs3.ocmshareproviderv0alpha.CreateShareRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cs3.ocmshareproviderv0alpha.CreateShareRequest;
  return proto.cs3.ocmshareproviderv0alpha.CreateShareRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cs3.ocmshareproviderv0alpha.CreateShareRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cs3.ocmshareproviderv0alpha.CreateShareRequest}
 */
proto.cs3.ocmshareproviderv0alpha.CreateShareRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new cs3_types_types_pb.Opaque;
      reader.readMessage(value,cs3_types_types_pb.Opaque.deserializeBinaryFromReader);
      msg.setOpaque(value);
      break;
    case 2:
      var value = new cs3_storageprovider_v0alpha_resources_pb.ResourceId;
      reader.readMessage(value,cs3_storageprovider_v0alpha_resources_pb.ResourceId.deserializeBinaryFromReader);
      msg.setResourceId(value);
      break;
    case 3:
      var value = new cs3_ocmshareprovider_v0alpha_resources_pb.ShareGrant;
      reader.readMessage(value,cs3_ocmshareprovider_v0alpha_resources_pb.ShareGrant.deserializeBinaryFromReader);
      msg.setGrant(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cs3.ocmshareproviderv0alpha.CreateShareRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cs3.ocmshareproviderv0alpha.CreateShareRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cs3.ocmshareproviderv0alpha.CreateShareRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cs3.ocmshareproviderv0alpha.CreateShareRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOpaque();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      cs3_types_types_pb.Opaque.serializeBinaryToWriter
    );
  }
  f = message.getResourceId();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      cs3_storageprovider_v0alpha_resources_pb.ResourceId.serializeBinaryToWriter
    );
  }
  f = message.getGrant();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      cs3_ocmshareprovider_v0alpha_resources_pb.ShareGrant.serializeBinaryToWriter
    );
  }
};


/**
 * optional cs3.types.Opaque opaque = 1;
 * @return {?proto.cs3.types.Opaque}
 */
proto.cs3.ocmshareproviderv0alpha.CreateShareRequest.prototype.getOpaque = function() {
  return /** @type{?proto.cs3.types.Opaque} */ (
    jspb.Message.getWrapperField(this, cs3_types_types_pb.Opaque, 1));
};


/** @param {?proto.cs3.types.Opaque|undefined} value */
proto.cs3.ocmshareproviderv0alpha.CreateShareRequest.prototype.setOpaque = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.cs3.ocmshareproviderv0alpha.CreateShareRequest.prototype.clearOpaque = function() {
  this.setOpaque(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cs3.ocmshareproviderv0alpha.CreateShareRequest.prototype.hasOpaque = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional cs3.storageproviderv0alpha.ResourceId resource_id = 2;
 * @return {?proto.cs3.storageproviderv0alpha.ResourceId}
 */
proto.cs3.ocmshareproviderv0alpha.CreateShareRequest.prototype.getResourceId = function() {
  return /** @type{?proto.cs3.storageproviderv0alpha.ResourceId} */ (
    jspb.Message.getWrapperField(this, cs3_storageprovider_v0alpha_resources_pb.ResourceId, 2));
};


/** @param {?proto.cs3.storageproviderv0alpha.ResourceId|undefined} value */
proto.cs3.ocmshareproviderv0alpha.CreateShareRequest.prototype.setResourceId = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.cs3.ocmshareproviderv0alpha.CreateShareRequest.prototype.clearResourceId = function() {
  this.setResourceId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cs3.ocmshareproviderv0alpha.CreateShareRequest.prototype.hasResourceId = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional ShareGrant grant = 3;
 * @return {?proto.cs3.ocmshareproviderv0alpha.ShareGrant}
 */
proto.cs3.ocmshareproviderv0alpha.CreateShareRequest.prototype.getGrant = function() {
  return /** @type{?proto.cs3.ocmshareproviderv0alpha.ShareGrant} */ (
    jspb.Message.getWrapperField(this, cs3_ocmshareprovider_v0alpha_resources_pb.ShareGrant, 3));
};


/** @param {?proto.cs3.ocmshareproviderv0alpha.ShareGrant|undefined} value */
proto.cs3.ocmshareproviderv0alpha.CreateShareRequest.prototype.setGrant = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.cs3.ocmshareproviderv0alpha.CreateShareRequest.prototype.clearGrant = function() {
  this.setGrant(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cs3.ocmshareproviderv0alpha.CreateShareRequest.prototype.hasGrant = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cs3.ocmshareproviderv0alpha.CreateShareResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.cs3.ocmshareproviderv0alpha.CreateShareResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cs3.ocmshareproviderv0alpha.CreateShareResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cs3.ocmshareproviderv0alpha.CreateShareResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: (f = msg.getStatus()) && cs3_rpc_status_pb.Status.toObject(includeInstance, f),
    opaque: (f = msg.getOpaque()) && cs3_types_types_pb.Opaque.toObject(includeInstance, f),
    share: (f = msg.getShare()) && cs3_ocmshareprovider_v0alpha_resources_pb.Share.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cs3.ocmshareproviderv0alpha.CreateShareResponse}
 */
proto.cs3.ocmshareproviderv0alpha.CreateShareResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cs3.ocmshareproviderv0alpha.CreateShareResponse;
  return proto.cs3.ocmshareproviderv0alpha.CreateShareResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cs3.ocmshareproviderv0alpha.CreateShareResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cs3.ocmshareproviderv0alpha.CreateShareResponse}
 */
proto.cs3.ocmshareproviderv0alpha.CreateShareResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new cs3_rpc_status_pb.Status;
      reader.readMessage(value,cs3_rpc_status_pb.Status.deserializeBinaryFromReader);
      msg.setStatus(value);
      break;
    case 2:
      var value = new cs3_types_types_pb.Opaque;
      reader.readMessage(value,cs3_types_types_pb.Opaque.deserializeBinaryFromReader);
      msg.setOpaque(value);
      break;
    case 3:
      var value = new cs3_ocmshareprovider_v0alpha_resources_pb.Share;
      reader.readMessage(value,cs3_ocmshareprovider_v0alpha_resources_pb.Share.deserializeBinaryFromReader);
      msg.setShare(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cs3.ocmshareproviderv0alpha.CreateShareResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cs3.ocmshareproviderv0alpha.CreateShareResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cs3.ocmshareproviderv0alpha.CreateShareResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cs3.ocmshareproviderv0alpha.CreateShareResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      cs3_rpc_status_pb.Status.serializeBinaryToWriter
    );
  }
  f = message.getOpaque();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      cs3_types_types_pb.Opaque.serializeBinaryToWriter
    );
  }
  f = message.getShare();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      cs3_ocmshareprovider_v0alpha_resources_pb.Share.serializeBinaryToWriter
    );
  }
};


/**
 * optional cs3.rpc.Status status = 1;
 * @return {?proto.cs3.rpc.Status}
 */
proto.cs3.ocmshareproviderv0alpha.CreateShareResponse.prototype.getStatus = function() {
  return /** @type{?proto.cs3.rpc.Status} */ (
    jspb.Message.getWrapperField(this, cs3_rpc_status_pb.Status, 1));
};


/** @param {?proto.cs3.rpc.Status|undefined} value */
proto.cs3.ocmshareproviderv0alpha.CreateShareResponse.prototype.setStatus = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.cs3.ocmshareproviderv0alpha.CreateShareResponse.prototype.clearStatus = function() {
  this.setStatus(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cs3.ocmshareproviderv0alpha.CreateShareResponse.prototype.hasStatus = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional cs3.types.Opaque opaque = 2;
 * @return {?proto.cs3.types.Opaque}
 */
proto.cs3.ocmshareproviderv0alpha.CreateShareResponse.prototype.getOpaque = function() {
  return /** @type{?proto.cs3.types.Opaque} */ (
    jspb.Message.getWrapperField(this, cs3_types_types_pb.Opaque, 2));
};


/** @param {?proto.cs3.types.Opaque|undefined} value */
proto.cs3.ocmshareproviderv0alpha.CreateShareResponse.prototype.setOpaque = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.cs3.ocmshareproviderv0alpha.CreateShareResponse.prototype.clearOpaque = function() {
  this.setOpaque(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cs3.ocmshareproviderv0alpha.CreateShareResponse.prototype.hasOpaque = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional Share share = 3;
 * @return {?proto.cs3.ocmshareproviderv0alpha.Share}
 */
proto.cs3.ocmshareproviderv0alpha.CreateShareResponse.prototype.getShare = function() {
  return /** @type{?proto.cs3.ocmshareproviderv0alpha.Share} */ (
    jspb.Message.getWrapperField(this, cs3_ocmshareprovider_v0alpha_resources_pb.Share, 3));
};


/** @param {?proto.cs3.ocmshareproviderv0alpha.Share|undefined} value */
proto.cs3.ocmshareproviderv0alpha.CreateShareResponse.prototype.setShare = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.cs3.ocmshareproviderv0alpha.CreateShareResponse.prototype.clearShare = function() {
  this.setShare(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cs3.ocmshareproviderv0alpha.CreateShareResponse.prototype.hasShare = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cs3.ocmshareproviderv0alpha.UpdateShareRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cs3.ocmshareproviderv0alpha.UpdateShareRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cs3.ocmshareproviderv0alpha.UpdateShareRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cs3.ocmshareproviderv0alpha.UpdateShareRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    opaque: (f = msg.getOpaque()) && cs3_types_types_pb.Opaque.toObject(includeInstance, f),
    ref: (f = msg.getRef()) && cs3_ocmshareprovider_v0alpha_resources_pb.ShareReference.toObject(includeInstance, f),
    field: (f = msg.getField()) && proto.cs3.ocmshareproviderv0alpha.UpdateShareRequest.UpdateField.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cs3.ocmshareproviderv0alpha.UpdateShareRequest}
 */
proto.cs3.ocmshareproviderv0alpha.UpdateShareRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cs3.ocmshareproviderv0alpha.UpdateShareRequest;
  return proto.cs3.ocmshareproviderv0alpha.UpdateShareRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cs3.ocmshareproviderv0alpha.UpdateShareRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cs3.ocmshareproviderv0alpha.UpdateShareRequest}
 */
proto.cs3.ocmshareproviderv0alpha.UpdateShareRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new cs3_types_types_pb.Opaque;
      reader.readMessage(value,cs3_types_types_pb.Opaque.deserializeBinaryFromReader);
      msg.setOpaque(value);
      break;
    case 2:
      var value = new cs3_ocmshareprovider_v0alpha_resources_pb.ShareReference;
      reader.readMessage(value,cs3_ocmshareprovider_v0alpha_resources_pb.ShareReference.deserializeBinaryFromReader);
      msg.setRef(value);
      break;
    case 3:
      var value = new proto.cs3.ocmshareproviderv0alpha.UpdateShareRequest.UpdateField;
      reader.readMessage(value,proto.cs3.ocmshareproviderv0alpha.UpdateShareRequest.UpdateField.deserializeBinaryFromReader);
      msg.setField(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cs3.ocmshareproviderv0alpha.UpdateShareRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cs3.ocmshareproviderv0alpha.UpdateShareRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cs3.ocmshareproviderv0alpha.UpdateShareRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cs3.ocmshareproviderv0alpha.UpdateShareRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOpaque();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      cs3_types_types_pb.Opaque.serializeBinaryToWriter
    );
  }
  f = message.getRef();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      cs3_ocmshareprovider_v0alpha_resources_pb.ShareReference.serializeBinaryToWriter
    );
  }
  f = message.getField();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.cs3.ocmshareproviderv0alpha.UpdateShareRequest.UpdateField.serializeBinaryToWriter
    );
  }
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.cs3.ocmshareproviderv0alpha.UpdateShareRequest.UpdateField.oneofGroups_ = [[2,3]];

/**
 * @enum {number}
 */
proto.cs3.ocmshareproviderv0alpha.UpdateShareRequest.UpdateField.FieldCase = {
  FIELD_NOT_SET: 0,
  PERMISSIONS: 2,
  DISPLAY_NAME: 3
};

/**
 * @return {proto.cs3.ocmshareproviderv0alpha.UpdateShareRequest.UpdateField.FieldCase}
 */
proto.cs3.ocmshareproviderv0alpha.UpdateShareRequest.UpdateField.prototype.getFieldCase = function() {
  return /** @type {proto.cs3.ocmshareproviderv0alpha.UpdateShareRequest.UpdateField.FieldCase} */(jspb.Message.computeOneofCase(this, proto.cs3.ocmshareproviderv0alpha.UpdateShareRequest.UpdateField.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cs3.ocmshareproviderv0alpha.UpdateShareRequest.UpdateField.prototype.toObject = function(opt_includeInstance) {
  return proto.cs3.ocmshareproviderv0alpha.UpdateShareRequest.UpdateField.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cs3.ocmshareproviderv0alpha.UpdateShareRequest.UpdateField} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cs3.ocmshareproviderv0alpha.UpdateShareRequest.UpdateField.toObject = function(includeInstance, msg) {
  var f, obj = {
    permissions: (f = msg.getPermissions()) && cs3_ocmshareprovider_v0alpha_resources_pb.SharePermissions.toObject(includeInstance, f),
    displayName: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cs3.ocmshareproviderv0alpha.UpdateShareRequest.UpdateField}
 */
proto.cs3.ocmshareproviderv0alpha.UpdateShareRequest.UpdateField.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cs3.ocmshareproviderv0alpha.UpdateShareRequest.UpdateField;
  return proto.cs3.ocmshareproviderv0alpha.UpdateShareRequest.UpdateField.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cs3.ocmshareproviderv0alpha.UpdateShareRequest.UpdateField} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cs3.ocmshareproviderv0alpha.UpdateShareRequest.UpdateField}
 */
proto.cs3.ocmshareproviderv0alpha.UpdateShareRequest.UpdateField.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = new cs3_ocmshareprovider_v0alpha_resources_pb.SharePermissions;
      reader.readMessage(value,cs3_ocmshareprovider_v0alpha_resources_pb.SharePermissions.deserializeBinaryFromReader);
      msg.setPermissions(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDisplayName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cs3.ocmshareproviderv0alpha.UpdateShareRequest.UpdateField.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cs3.ocmshareproviderv0alpha.UpdateShareRequest.UpdateField.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cs3.ocmshareproviderv0alpha.UpdateShareRequest.UpdateField} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cs3.ocmshareproviderv0alpha.UpdateShareRequest.UpdateField.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPermissions();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      cs3_ocmshareprovider_v0alpha_resources_pb.SharePermissions.serializeBinaryToWriter
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional SharePermissions permissions = 2;
 * @return {?proto.cs3.ocmshareproviderv0alpha.SharePermissions}
 */
proto.cs3.ocmshareproviderv0alpha.UpdateShareRequest.UpdateField.prototype.getPermissions = function() {
  return /** @type{?proto.cs3.ocmshareproviderv0alpha.SharePermissions} */ (
    jspb.Message.getWrapperField(this, cs3_ocmshareprovider_v0alpha_resources_pb.SharePermissions, 2));
};


/** @param {?proto.cs3.ocmshareproviderv0alpha.SharePermissions|undefined} value */
proto.cs3.ocmshareproviderv0alpha.UpdateShareRequest.UpdateField.prototype.setPermissions = function(value) {
  jspb.Message.setOneofWrapperField(this, 2, proto.cs3.ocmshareproviderv0alpha.UpdateShareRequest.UpdateField.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 */
proto.cs3.ocmshareproviderv0alpha.UpdateShareRequest.UpdateField.prototype.clearPermissions = function() {
  this.setPermissions(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cs3.ocmshareproviderv0alpha.UpdateShareRequest.UpdateField.prototype.hasPermissions = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string display_name = 3;
 * @return {string}
 */
proto.cs3.ocmshareproviderv0alpha.UpdateShareRequest.UpdateField.prototype.getDisplayName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.cs3.ocmshareproviderv0alpha.UpdateShareRequest.UpdateField.prototype.setDisplayName = function(value) {
  jspb.Message.setOneofField(this, 3, proto.cs3.ocmshareproviderv0alpha.UpdateShareRequest.UpdateField.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 */
proto.cs3.ocmshareproviderv0alpha.UpdateShareRequest.UpdateField.prototype.clearDisplayName = function() {
  jspb.Message.setOneofField(this, 3, proto.cs3.ocmshareproviderv0alpha.UpdateShareRequest.UpdateField.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cs3.ocmshareproviderv0alpha.UpdateShareRequest.UpdateField.prototype.hasDisplayName = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional cs3.types.Opaque opaque = 1;
 * @return {?proto.cs3.types.Opaque}
 */
proto.cs3.ocmshareproviderv0alpha.UpdateShareRequest.prototype.getOpaque = function() {
  return /** @type{?proto.cs3.types.Opaque} */ (
    jspb.Message.getWrapperField(this, cs3_types_types_pb.Opaque, 1));
};


/** @param {?proto.cs3.types.Opaque|undefined} value */
proto.cs3.ocmshareproviderv0alpha.UpdateShareRequest.prototype.setOpaque = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.cs3.ocmshareproviderv0alpha.UpdateShareRequest.prototype.clearOpaque = function() {
  this.setOpaque(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cs3.ocmshareproviderv0alpha.UpdateShareRequest.prototype.hasOpaque = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional ShareReference ref = 2;
 * @return {?proto.cs3.ocmshareproviderv0alpha.ShareReference}
 */
proto.cs3.ocmshareproviderv0alpha.UpdateShareRequest.prototype.getRef = function() {
  return /** @type{?proto.cs3.ocmshareproviderv0alpha.ShareReference} */ (
    jspb.Message.getWrapperField(this, cs3_ocmshareprovider_v0alpha_resources_pb.ShareReference, 2));
};


/** @param {?proto.cs3.ocmshareproviderv0alpha.ShareReference|undefined} value */
proto.cs3.ocmshareproviderv0alpha.UpdateShareRequest.prototype.setRef = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.cs3.ocmshareproviderv0alpha.UpdateShareRequest.prototype.clearRef = function() {
  this.setRef(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cs3.ocmshareproviderv0alpha.UpdateShareRequest.prototype.hasRef = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional UpdateField field = 3;
 * @return {?proto.cs3.ocmshareproviderv0alpha.UpdateShareRequest.UpdateField}
 */
proto.cs3.ocmshareproviderv0alpha.UpdateShareRequest.prototype.getField = function() {
  return /** @type{?proto.cs3.ocmshareproviderv0alpha.UpdateShareRequest.UpdateField} */ (
    jspb.Message.getWrapperField(this, proto.cs3.ocmshareproviderv0alpha.UpdateShareRequest.UpdateField, 3));
};


/** @param {?proto.cs3.ocmshareproviderv0alpha.UpdateShareRequest.UpdateField|undefined} value */
proto.cs3.ocmshareproviderv0alpha.UpdateShareRequest.prototype.setField = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.cs3.ocmshareproviderv0alpha.UpdateShareRequest.prototype.clearField = function() {
  this.setField(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cs3.ocmshareproviderv0alpha.UpdateShareRequest.prototype.hasField = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cs3.ocmshareproviderv0alpha.UpdateShareResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.cs3.ocmshareproviderv0alpha.UpdateShareResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cs3.ocmshareproviderv0alpha.UpdateShareResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cs3.ocmshareproviderv0alpha.UpdateShareResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: (f = msg.getStatus()) && cs3_rpc_status_pb.Status.toObject(includeInstance, f),
    opaque: (f = msg.getOpaque()) && cs3_types_types_pb.Opaque.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cs3.ocmshareproviderv0alpha.UpdateShareResponse}
 */
proto.cs3.ocmshareproviderv0alpha.UpdateShareResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cs3.ocmshareproviderv0alpha.UpdateShareResponse;
  return proto.cs3.ocmshareproviderv0alpha.UpdateShareResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cs3.ocmshareproviderv0alpha.UpdateShareResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cs3.ocmshareproviderv0alpha.UpdateShareResponse}
 */
proto.cs3.ocmshareproviderv0alpha.UpdateShareResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new cs3_rpc_status_pb.Status;
      reader.readMessage(value,cs3_rpc_status_pb.Status.deserializeBinaryFromReader);
      msg.setStatus(value);
      break;
    case 2:
      var value = new cs3_types_types_pb.Opaque;
      reader.readMessage(value,cs3_types_types_pb.Opaque.deserializeBinaryFromReader);
      msg.setOpaque(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cs3.ocmshareproviderv0alpha.UpdateShareResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cs3.ocmshareproviderv0alpha.UpdateShareResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cs3.ocmshareproviderv0alpha.UpdateShareResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cs3.ocmshareproviderv0alpha.UpdateShareResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      cs3_rpc_status_pb.Status.serializeBinaryToWriter
    );
  }
  f = message.getOpaque();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      cs3_types_types_pb.Opaque.serializeBinaryToWriter
    );
  }
};


/**
 * optional cs3.rpc.Status status = 1;
 * @return {?proto.cs3.rpc.Status}
 */
proto.cs3.ocmshareproviderv0alpha.UpdateShareResponse.prototype.getStatus = function() {
  return /** @type{?proto.cs3.rpc.Status} */ (
    jspb.Message.getWrapperField(this, cs3_rpc_status_pb.Status, 1));
};


/** @param {?proto.cs3.rpc.Status|undefined} value */
proto.cs3.ocmshareproviderv0alpha.UpdateShareResponse.prototype.setStatus = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.cs3.ocmshareproviderv0alpha.UpdateShareResponse.prototype.clearStatus = function() {
  this.setStatus(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cs3.ocmshareproviderv0alpha.UpdateShareResponse.prototype.hasStatus = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional cs3.types.Opaque opaque = 2;
 * @return {?proto.cs3.types.Opaque}
 */
proto.cs3.ocmshareproviderv0alpha.UpdateShareResponse.prototype.getOpaque = function() {
  return /** @type{?proto.cs3.types.Opaque} */ (
    jspb.Message.getWrapperField(this, cs3_types_types_pb.Opaque, 2));
};


/** @param {?proto.cs3.types.Opaque|undefined} value */
proto.cs3.ocmshareproviderv0alpha.UpdateShareResponse.prototype.setOpaque = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.cs3.ocmshareproviderv0alpha.UpdateShareResponse.prototype.clearOpaque = function() {
  this.setOpaque(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cs3.ocmshareproviderv0alpha.UpdateShareResponse.prototype.hasOpaque = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cs3.ocmshareproviderv0alpha.ListSharesRequest.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cs3.ocmshareproviderv0alpha.ListSharesRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cs3.ocmshareproviderv0alpha.ListSharesRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cs3.ocmshareproviderv0alpha.ListSharesRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cs3.ocmshareproviderv0alpha.ListSharesRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    opaque: (f = msg.getOpaque()) && cs3_types_types_pb.Opaque.toObject(includeInstance, f),
    filtersList: jspb.Message.toObjectList(msg.getFiltersList(),
    proto.cs3.ocmshareproviderv0alpha.ListSharesRequest.Filter.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cs3.ocmshareproviderv0alpha.ListSharesRequest}
 */
proto.cs3.ocmshareproviderv0alpha.ListSharesRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cs3.ocmshareproviderv0alpha.ListSharesRequest;
  return proto.cs3.ocmshareproviderv0alpha.ListSharesRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cs3.ocmshareproviderv0alpha.ListSharesRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cs3.ocmshareproviderv0alpha.ListSharesRequest}
 */
proto.cs3.ocmshareproviderv0alpha.ListSharesRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new cs3_types_types_pb.Opaque;
      reader.readMessage(value,cs3_types_types_pb.Opaque.deserializeBinaryFromReader);
      msg.setOpaque(value);
      break;
    case 2:
      var value = new proto.cs3.ocmshareproviderv0alpha.ListSharesRequest.Filter;
      reader.readMessage(value,proto.cs3.ocmshareproviderv0alpha.ListSharesRequest.Filter.deserializeBinaryFromReader);
      msg.addFilters(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cs3.ocmshareproviderv0alpha.ListSharesRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cs3.ocmshareproviderv0alpha.ListSharesRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cs3.ocmshareproviderv0alpha.ListSharesRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cs3.ocmshareproviderv0alpha.ListSharesRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOpaque();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      cs3_types_types_pb.Opaque.serializeBinaryToWriter
    );
  }
  f = message.getFiltersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.cs3.ocmshareproviderv0alpha.ListSharesRequest.Filter.serializeBinaryToWriter
    );
  }
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.cs3.ocmshareproviderv0alpha.ListSharesRequest.Filter.oneofGroups_ = [[3,4,5]];

/**
 * @enum {number}
 */
proto.cs3.ocmshareproviderv0alpha.ListSharesRequest.Filter.TermCase = {
  TERM_NOT_SET: 0,
  RESOURCE_ID: 3,
  OWNER: 4,
  CREATOR: 5
};

/**
 * @return {proto.cs3.ocmshareproviderv0alpha.ListSharesRequest.Filter.TermCase}
 */
proto.cs3.ocmshareproviderv0alpha.ListSharesRequest.Filter.prototype.getTermCase = function() {
  return /** @type {proto.cs3.ocmshareproviderv0alpha.ListSharesRequest.Filter.TermCase} */(jspb.Message.computeOneofCase(this, proto.cs3.ocmshareproviderv0alpha.ListSharesRequest.Filter.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cs3.ocmshareproviderv0alpha.ListSharesRequest.Filter.prototype.toObject = function(opt_includeInstance) {
  return proto.cs3.ocmshareproviderv0alpha.ListSharesRequest.Filter.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cs3.ocmshareproviderv0alpha.ListSharesRequest.Filter} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cs3.ocmshareproviderv0alpha.ListSharesRequest.Filter.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: jspb.Message.getFieldWithDefault(msg, 2, 0),
    resourceId: (f = msg.getResourceId()) && cs3_storageprovider_v0alpha_resources_pb.ResourceId.toObject(includeInstance, f),
    owner: (f = msg.getOwner()) && cs3_types_types_pb.UserId.toObject(includeInstance, f),
    creator: (f = msg.getCreator()) && cs3_types_types_pb.UserId.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cs3.ocmshareproviderv0alpha.ListSharesRequest.Filter}
 */
proto.cs3.ocmshareproviderv0alpha.ListSharesRequest.Filter.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cs3.ocmshareproviderv0alpha.ListSharesRequest.Filter;
  return proto.cs3.ocmshareproviderv0alpha.ListSharesRequest.Filter.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cs3.ocmshareproviderv0alpha.ListSharesRequest.Filter} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cs3.ocmshareproviderv0alpha.ListSharesRequest.Filter}
 */
proto.cs3.ocmshareproviderv0alpha.ListSharesRequest.Filter.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = /** @type {!proto.cs3.ocmshareproviderv0alpha.ListSharesRequest.Filter.Type} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 3:
      var value = new cs3_storageprovider_v0alpha_resources_pb.ResourceId;
      reader.readMessage(value,cs3_storageprovider_v0alpha_resources_pb.ResourceId.deserializeBinaryFromReader);
      msg.setResourceId(value);
      break;
    case 4:
      var value = new cs3_types_types_pb.UserId;
      reader.readMessage(value,cs3_types_types_pb.UserId.deserializeBinaryFromReader);
      msg.setOwner(value);
      break;
    case 5:
      var value = new cs3_types_types_pb.UserId;
      reader.readMessage(value,cs3_types_types_pb.UserId.deserializeBinaryFromReader);
      msg.setCreator(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cs3.ocmshareproviderv0alpha.ListSharesRequest.Filter.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cs3.ocmshareproviderv0alpha.ListSharesRequest.Filter.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cs3.ocmshareproviderv0alpha.ListSharesRequest.Filter} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cs3.ocmshareproviderv0alpha.ListSharesRequest.Filter.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getResourceId();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      cs3_storageprovider_v0alpha_resources_pb.ResourceId.serializeBinaryToWriter
    );
  }
  f = message.getOwner();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      cs3_types_types_pb.UserId.serializeBinaryToWriter
    );
  }
  f = message.getCreator();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      cs3_types_types_pb.UserId.serializeBinaryToWriter
    );
  }
};


/**
 * @enum {number}
 */
proto.cs3.ocmshareproviderv0alpha.ListSharesRequest.Filter.Type = {
  LIST_SHARES_REQUEST_FILTER_TYPE_INVALID: 0,
  LIST_SHARES_REQUEST_FILTER_TYPE_NO_FILTER: 1,
  LIST_SHARES_REQUEST_FILTER_TYPE_RESOURCE_ID: 2,
  LIST_SHARES_REQUEST_FILTER_TYPE_OWNER: 3,
  LIST_SHARES_REQUEST_FILTER_TYPE_CREATOR: 4,
  LIST_SHARES_REQUEST_FILTER_TYPE_OWNER_PROVIDER: 5,
  LIST_SHARES_REQUEST_FILTER_TYPE_CREATOR_PROVIDER: 6
};

/**
 * optional Type type = 2;
 * @return {!proto.cs3.ocmshareproviderv0alpha.ListSharesRequest.Filter.Type}
 */
proto.cs3.ocmshareproviderv0alpha.ListSharesRequest.Filter.prototype.getType = function() {
  return /** @type {!proto.cs3.ocmshareproviderv0alpha.ListSharesRequest.Filter.Type} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {!proto.cs3.ocmshareproviderv0alpha.ListSharesRequest.Filter.Type} value */
proto.cs3.ocmshareproviderv0alpha.ListSharesRequest.Filter.prototype.setType = function(value) {
  jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional cs3.storageproviderv0alpha.ResourceId resource_id = 3;
 * @return {?proto.cs3.storageproviderv0alpha.ResourceId}
 */
proto.cs3.ocmshareproviderv0alpha.ListSharesRequest.Filter.prototype.getResourceId = function() {
  return /** @type{?proto.cs3.storageproviderv0alpha.ResourceId} */ (
    jspb.Message.getWrapperField(this, cs3_storageprovider_v0alpha_resources_pb.ResourceId, 3));
};


/** @param {?proto.cs3.storageproviderv0alpha.ResourceId|undefined} value */
proto.cs3.ocmshareproviderv0alpha.ListSharesRequest.Filter.prototype.setResourceId = function(value) {
  jspb.Message.setOneofWrapperField(this, 3, proto.cs3.ocmshareproviderv0alpha.ListSharesRequest.Filter.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 */
proto.cs3.ocmshareproviderv0alpha.ListSharesRequest.Filter.prototype.clearResourceId = function() {
  this.setResourceId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cs3.ocmshareproviderv0alpha.ListSharesRequest.Filter.prototype.hasResourceId = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional cs3.types.UserId owner = 4;
 * @return {?proto.cs3.types.UserId}
 */
proto.cs3.ocmshareproviderv0alpha.ListSharesRequest.Filter.prototype.getOwner = function() {
  return /** @type{?proto.cs3.types.UserId} */ (
    jspb.Message.getWrapperField(this, cs3_types_types_pb.UserId, 4));
};


/** @param {?proto.cs3.types.UserId|undefined} value */
proto.cs3.ocmshareproviderv0alpha.ListSharesRequest.Filter.prototype.setOwner = function(value) {
  jspb.Message.setOneofWrapperField(this, 4, proto.cs3.ocmshareproviderv0alpha.ListSharesRequest.Filter.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 */
proto.cs3.ocmshareproviderv0alpha.ListSharesRequest.Filter.prototype.clearOwner = function() {
  this.setOwner(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cs3.ocmshareproviderv0alpha.ListSharesRequest.Filter.prototype.hasOwner = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional cs3.types.UserId creator = 5;
 * @return {?proto.cs3.types.UserId}
 */
proto.cs3.ocmshareproviderv0alpha.ListSharesRequest.Filter.prototype.getCreator = function() {
  return /** @type{?proto.cs3.types.UserId} */ (
    jspb.Message.getWrapperField(this, cs3_types_types_pb.UserId, 5));
};


/** @param {?proto.cs3.types.UserId|undefined} value */
proto.cs3.ocmshareproviderv0alpha.ListSharesRequest.Filter.prototype.setCreator = function(value) {
  jspb.Message.setOneofWrapperField(this, 5, proto.cs3.ocmshareproviderv0alpha.ListSharesRequest.Filter.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 */
proto.cs3.ocmshareproviderv0alpha.ListSharesRequest.Filter.prototype.clearCreator = function() {
  this.setCreator(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cs3.ocmshareproviderv0alpha.ListSharesRequest.Filter.prototype.hasCreator = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional cs3.types.Opaque opaque = 1;
 * @return {?proto.cs3.types.Opaque}
 */
proto.cs3.ocmshareproviderv0alpha.ListSharesRequest.prototype.getOpaque = function() {
  return /** @type{?proto.cs3.types.Opaque} */ (
    jspb.Message.getWrapperField(this, cs3_types_types_pb.Opaque, 1));
};


/** @param {?proto.cs3.types.Opaque|undefined} value */
proto.cs3.ocmshareproviderv0alpha.ListSharesRequest.prototype.setOpaque = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.cs3.ocmshareproviderv0alpha.ListSharesRequest.prototype.clearOpaque = function() {
  this.setOpaque(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cs3.ocmshareproviderv0alpha.ListSharesRequest.prototype.hasOpaque = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated Filter filters = 2;
 * @return {!Array<!proto.cs3.ocmshareproviderv0alpha.ListSharesRequest.Filter>}
 */
proto.cs3.ocmshareproviderv0alpha.ListSharesRequest.prototype.getFiltersList = function() {
  return /** @type{!Array<!proto.cs3.ocmshareproviderv0alpha.ListSharesRequest.Filter>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.cs3.ocmshareproviderv0alpha.ListSharesRequest.Filter, 2));
};


/** @param {!Array<!proto.cs3.ocmshareproviderv0alpha.ListSharesRequest.Filter>} value */
proto.cs3.ocmshareproviderv0alpha.ListSharesRequest.prototype.setFiltersList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.cs3.ocmshareproviderv0alpha.ListSharesRequest.Filter=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cs3.ocmshareproviderv0alpha.ListSharesRequest.Filter}
 */
proto.cs3.ocmshareproviderv0alpha.ListSharesRequest.prototype.addFilters = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.cs3.ocmshareproviderv0alpha.ListSharesRequest.Filter, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.cs3.ocmshareproviderv0alpha.ListSharesRequest.prototype.clearFiltersList = function() {
  this.setFiltersList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cs3.ocmshareproviderv0alpha.ListSharesResponse.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cs3.ocmshareproviderv0alpha.ListSharesResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.cs3.ocmshareproviderv0alpha.ListSharesResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cs3.ocmshareproviderv0alpha.ListSharesResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cs3.ocmshareproviderv0alpha.ListSharesResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: (f = msg.getStatus()) && cs3_rpc_status_pb.Status.toObject(includeInstance, f),
    opaque: (f = msg.getOpaque()) && cs3_types_types_pb.Opaque.toObject(includeInstance, f),
    sharesList: jspb.Message.toObjectList(msg.getSharesList(),
    cs3_ocmshareprovider_v0alpha_resources_pb.Share.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cs3.ocmshareproviderv0alpha.ListSharesResponse}
 */
proto.cs3.ocmshareproviderv0alpha.ListSharesResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cs3.ocmshareproviderv0alpha.ListSharesResponse;
  return proto.cs3.ocmshareproviderv0alpha.ListSharesResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cs3.ocmshareproviderv0alpha.ListSharesResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cs3.ocmshareproviderv0alpha.ListSharesResponse}
 */
proto.cs3.ocmshareproviderv0alpha.ListSharesResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new cs3_rpc_status_pb.Status;
      reader.readMessage(value,cs3_rpc_status_pb.Status.deserializeBinaryFromReader);
      msg.setStatus(value);
      break;
    case 2:
      var value = new cs3_types_types_pb.Opaque;
      reader.readMessage(value,cs3_types_types_pb.Opaque.deserializeBinaryFromReader);
      msg.setOpaque(value);
      break;
    case 3:
      var value = new cs3_ocmshareprovider_v0alpha_resources_pb.Share;
      reader.readMessage(value,cs3_ocmshareprovider_v0alpha_resources_pb.Share.deserializeBinaryFromReader);
      msg.addShares(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cs3.ocmshareproviderv0alpha.ListSharesResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cs3.ocmshareproviderv0alpha.ListSharesResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cs3.ocmshareproviderv0alpha.ListSharesResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cs3.ocmshareproviderv0alpha.ListSharesResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      cs3_rpc_status_pb.Status.serializeBinaryToWriter
    );
  }
  f = message.getOpaque();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      cs3_types_types_pb.Opaque.serializeBinaryToWriter
    );
  }
  f = message.getSharesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      cs3_ocmshareprovider_v0alpha_resources_pb.Share.serializeBinaryToWriter
    );
  }
};


/**
 * optional cs3.rpc.Status status = 1;
 * @return {?proto.cs3.rpc.Status}
 */
proto.cs3.ocmshareproviderv0alpha.ListSharesResponse.prototype.getStatus = function() {
  return /** @type{?proto.cs3.rpc.Status} */ (
    jspb.Message.getWrapperField(this, cs3_rpc_status_pb.Status, 1));
};


/** @param {?proto.cs3.rpc.Status|undefined} value */
proto.cs3.ocmshareproviderv0alpha.ListSharesResponse.prototype.setStatus = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.cs3.ocmshareproviderv0alpha.ListSharesResponse.prototype.clearStatus = function() {
  this.setStatus(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cs3.ocmshareproviderv0alpha.ListSharesResponse.prototype.hasStatus = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional cs3.types.Opaque opaque = 2;
 * @return {?proto.cs3.types.Opaque}
 */
proto.cs3.ocmshareproviderv0alpha.ListSharesResponse.prototype.getOpaque = function() {
  return /** @type{?proto.cs3.types.Opaque} */ (
    jspb.Message.getWrapperField(this, cs3_types_types_pb.Opaque, 2));
};


/** @param {?proto.cs3.types.Opaque|undefined} value */
proto.cs3.ocmshareproviderv0alpha.ListSharesResponse.prototype.setOpaque = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.cs3.ocmshareproviderv0alpha.ListSharesResponse.prototype.clearOpaque = function() {
  this.setOpaque(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cs3.ocmshareproviderv0alpha.ListSharesResponse.prototype.hasOpaque = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * repeated Share shares = 3;
 * @return {!Array<!proto.cs3.ocmshareproviderv0alpha.Share>}
 */
proto.cs3.ocmshareproviderv0alpha.ListSharesResponse.prototype.getSharesList = function() {
  return /** @type{!Array<!proto.cs3.ocmshareproviderv0alpha.Share>} */ (
    jspb.Message.getRepeatedWrapperField(this, cs3_ocmshareprovider_v0alpha_resources_pb.Share, 3));
};


/** @param {!Array<!proto.cs3.ocmshareproviderv0alpha.Share>} value */
proto.cs3.ocmshareproviderv0alpha.ListSharesResponse.prototype.setSharesList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.cs3.ocmshareproviderv0alpha.Share=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cs3.ocmshareproviderv0alpha.Share}
 */
proto.cs3.ocmshareproviderv0alpha.ListSharesResponse.prototype.addShares = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.cs3.ocmshareproviderv0alpha.Share, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.cs3.ocmshareproviderv0alpha.ListSharesResponse.prototype.clearSharesList = function() {
  this.setSharesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cs3.ocmshareproviderv0alpha.RemoveShareRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cs3.ocmshareproviderv0alpha.RemoveShareRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cs3.ocmshareproviderv0alpha.RemoveShareRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cs3.ocmshareproviderv0alpha.RemoveShareRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    opaque: (f = msg.getOpaque()) && cs3_types_types_pb.Opaque.toObject(includeInstance, f),
    ref: (f = msg.getRef()) && cs3_ocmshareprovider_v0alpha_resources_pb.ShareReference.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cs3.ocmshareproviderv0alpha.RemoveShareRequest}
 */
proto.cs3.ocmshareproviderv0alpha.RemoveShareRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cs3.ocmshareproviderv0alpha.RemoveShareRequest;
  return proto.cs3.ocmshareproviderv0alpha.RemoveShareRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cs3.ocmshareproviderv0alpha.RemoveShareRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cs3.ocmshareproviderv0alpha.RemoveShareRequest}
 */
proto.cs3.ocmshareproviderv0alpha.RemoveShareRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new cs3_types_types_pb.Opaque;
      reader.readMessage(value,cs3_types_types_pb.Opaque.deserializeBinaryFromReader);
      msg.setOpaque(value);
      break;
    case 2:
      var value = new cs3_ocmshareprovider_v0alpha_resources_pb.ShareReference;
      reader.readMessage(value,cs3_ocmshareprovider_v0alpha_resources_pb.ShareReference.deserializeBinaryFromReader);
      msg.setRef(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cs3.ocmshareproviderv0alpha.RemoveShareRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cs3.ocmshareproviderv0alpha.RemoveShareRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cs3.ocmshareproviderv0alpha.RemoveShareRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cs3.ocmshareproviderv0alpha.RemoveShareRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOpaque();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      cs3_types_types_pb.Opaque.serializeBinaryToWriter
    );
  }
  f = message.getRef();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      cs3_ocmshareprovider_v0alpha_resources_pb.ShareReference.serializeBinaryToWriter
    );
  }
};


/**
 * optional cs3.types.Opaque opaque = 1;
 * @return {?proto.cs3.types.Opaque}
 */
proto.cs3.ocmshareproviderv0alpha.RemoveShareRequest.prototype.getOpaque = function() {
  return /** @type{?proto.cs3.types.Opaque} */ (
    jspb.Message.getWrapperField(this, cs3_types_types_pb.Opaque, 1));
};


/** @param {?proto.cs3.types.Opaque|undefined} value */
proto.cs3.ocmshareproviderv0alpha.RemoveShareRequest.prototype.setOpaque = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.cs3.ocmshareproviderv0alpha.RemoveShareRequest.prototype.clearOpaque = function() {
  this.setOpaque(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cs3.ocmshareproviderv0alpha.RemoveShareRequest.prototype.hasOpaque = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional ShareReference ref = 2;
 * @return {?proto.cs3.ocmshareproviderv0alpha.ShareReference}
 */
proto.cs3.ocmshareproviderv0alpha.RemoveShareRequest.prototype.getRef = function() {
  return /** @type{?proto.cs3.ocmshareproviderv0alpha.ShareReference} */ (
    jspb.Message.getWrapperField(this, cs3_ocmshareprovider_v0alpha_resources_pb.ShareReference, 2));
};


/** @param {?proto.cs3.ocmshareproviderv0alpha.ShareReference|undefined} value */
proto.cs3.ocmshareproviderv0alpha.RemoveShareRequest.prototype.setRef = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.cs3.ocmshareproviderv0alpha.RemoveShareRequest.prototype.clearRef = function() {
  this.setRef(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cs3.ocmshareproviderv0alpha.RemoveShareRequest.prototype.hasRef = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cs3.ocmshareproviderv0alpha.RemoveShareResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.cs3.ocmshareproviderv0alpha.RemoveShareResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cs3.ocmshareproviderv0alpha.RemoveShareResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cs3.ocmshareproviderv0alpha.RemoveShareResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: (f = msg.getStatus()) && cs3_rpc_status_pb.Status.toObject(includeInstance, f),
    opaque: (f = msg.getOpaque()) && cs3_types_types_pb.Opaque.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cs3.ocmshareproviderv0alpha.RemoveShareResponse}
 */
proto.cs3.ocmshareproviderv0alpha.RemoveShareResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cs3.ocmshareproviderv0alpha.RemoveShareResponse;
  return proto.cs3.ocmshareproviderv0alpha.RemoveShareResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cs3.ocmshareproviderv0alpha.RemoveShareResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cs3.ocmshareproviderv0alpha.RemoveShareResponse}
 */
proto.cs3.ocmshareproviderv0alpha.RemoveShareResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new cs3_rpc_status_pb.Status;
      reader.readMessage(value,cs3_rpc_status_pb.Status.deserializeBinaryFromReader);
      msg.setStatus(value);
      break;
    case 2:
      var value = new cs3_types_types_pb.Opaque;
      reader.readMessage(value,cs3_types_types_pb.Opaque.deserializeBinaryFromReader);
      msg.setOpaque(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cs3.ocmshareproviderv0alpha.RemoveShareResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cs3.ocmshareproviderv0alpha.RemoveShareResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cs3.ocmshareproviderv0alpha.RemoveShareResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cs3.ocmshareproviderv0alpha.RemoveShareResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      cs3_rpc_status_pb.Status.serializeBinaryToWriter
    );
  }
  f = message.getOpaque();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      cs3_types_types_pb.Opaque.serializeBinaryToWriter
    );
  }
};


/**
 * optional cs3.rpc.Status status = 1;
 * @return {?proto.cs3.rpc.Status}
 */
proto.cs3.ocmshareproviderv0alpha.RemoveShareResponse.prototype.getStatus = function() {
  return /** @type{?proto.cs3.rpc.Status} */ (
    jspb.Message.getWrapperField(this, cs3_rpc_status_pb.Status, 1));
};


/** @param {?proto.cs3.rpc.Status|undefined} value */
proto.cs3.ocmshareproviderv0alpha.RemoveShareResponse.prototype.setStatus = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.cs3.ocmshareproviderv0alpha.RemoveShareResponse.prototype.clearStatus = function() {
  this.setStatus(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cs3.ocmshareproviderv0alpha.RemoveShareResponse.prototype.hasStatus = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional cs3.types.Opaque opaque = 2;
 * @return {?proto.cs3.types.Opaque}
 */
proto.cs3.ocmshareproviderv0alpha.RemoveShareResponse.prototype.getOpaque = function() {
  return /** @type{?proto.cs3.types.Opaque} */ (
    jspb.Message.getWrapperField(this, cs3_types_types_pb.Opaque, 2));
};


/** @param {?proto.cs3.types.Opaque|undefined} value */
proto.cs3.ocmshareproviderv0alpha.RemoveShareResponse.prototype.setOpaque = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.cs3.ocmshareproviderv0alpha.RemoveShareResponse.prototype.clearOpaque = function() {
  this.setOpaque(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cs3.ocmshareproviderv0alpha.RemoveShareResponse.prototype.hasOpaque = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cs3.ocmshareproviderv0alpha.GetShareRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cs3.ocmshareproviderv0alpha.GetShareRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cs3.ocmshareproviderv0alpha.GetShareRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cs3.ocmshareproviderv0alpha.GetShareRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    opaque: (f = msg.getOpaque()) && cs3_types_types_pb.Opaque.toObject(includeInstance, f),
    ref: (f = msg.getRef()) && cs3_ocmshareprovider_v0alpha_resources_pb.ShareReference.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cs3.ocmshareproviderv0alpha.GetShareRequest}
 */
proto.cs3.ocmshareproviderv0alpha.GetShareRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cs3.ocmshareproviderv0alpha.GetShareRequest;
  return proto.cs3.ocmshareproviderv0alpha.GetShareRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cs3.ocmshareproviderv0alpha.GetShareRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cs3.ocmshareproviderv0alpha.GetShareRequest}
 */
proto.cs3.ocmshareproviderv0alpha.GetShareRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new cs3_types_types_pb.Opaque;
      reader.readMessage(value,cs3_types_types_pb.Opaque.deserializeBinaryFromReader);
      msg.setOpaque(value);
      break;
    case 2:
      var value = new cs3_ocmshareprovider_v0alpha_resources_pb.ShareReference;
      reader.readMessage(value,cs3_ocmshareprovider_v0alpha_resources_pb.ShareReference.deserializeBinaryFromReader);
      msg.setRef(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cs3.ocmshareproviderv0alpha.GetShareRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cs3.ocmshareproviderv0alpha.GetShareRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cs3.ocmshareproviderv0alpha.GetShareRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cs3.ocmshareproviderv0alpha.GetShareRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOpaque();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      cs3_types_types_pb.Opaque.serializeBinaryToWriter
    );
  }
  f = message.getRef();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      cs3_ocmshareprovider_v0alpha_resources_pb.ShareReference.serializeBinaryToWriter
    );
  }
};


/**
 * optional cs3.types.Opaque opaque = 1;
 * @return {?proto.cs3.types.Opaque}
 */
proto.cs3.ocmshareproviderv0alpha.GetShareRequest.prototype.getOpaque = function() {
  return /** @type{?proto.cs3.types.Opaque} */ (
    jspb.Message.getWrapperField(this, cs3_types_types_pb.Opaque, 1));
};


/** @param {?proto.cs3.types.Opaque|undefined} value */
proto.cs3.ocmshareproviderv0alpha.GetShareRequest.prototype.setOpaque = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.cs3.ocmshareproviderv0alpha.GetShareRequest.prototype.clearOpaque = function() {
  this.setOpaque(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cs3.ocmshareproviderv0alpha.GetShareRequest.prototype.hasOpaque = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional ShareReference ref = 2;
 * @return {?proto.cs3.ocmshareproviderv0alpha.ShareReference}
 */
proto.cs3.ocmshareproviderv0alpha.GetShareRequest.prototype.getRef = function() {
  return /** @type{?proto.cs3.ocmshareproviderv0alpha.ShareReference} */ (
    jspb.Message.getWrapperField(this, cs3_ocmshareprovider_v0alpha_resources_pb.ShareReference, 2));
};


/** @param {?proto.cs3.ocmshareproviderv0alpha.ShareReference|undefined} value */
proto.cs3.ocmshareproviderv0alpha.GetShareRequest.prototype.setRef = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.cs3.ocmshareproviderv0alpha.GetShareRequest.prototype.clearRef = function() {
  this.setRef(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cs3.ocmshareproviderv0alpha.GetShareRequest.prototype.hasRef = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cs3.ocmshareproviderv0alpha.GetShareResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.cs3.ocmshareproviderv0alpha.GetShareResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cs3.ocmshareproviderv0alpha.GetShareResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cs3.ocmshareproviderv0alpha.GetShareResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: (f = msg.getStatus()) && cs3_rpc_status_pb.Status.toObject(includeInstance, f),
    opaque: (f = msg.getOpaque()) && cs3_types_types_pb.Opaque.toObject(includeInstance, f),
    share: (f = msg.getShare()) && cs3_ocmshareprovider_v0alpha_resources_pb.Share.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cs3.ocmshareproviderv0alpha.GetShareResponse}
 */
proto.cs3.ocmshareproviderv0alpha.GetShareResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cs3.ocmshareproviderv0alpha.GetShareResponse;
  return proto.cs3.ocmshareproviderv0alpha.GetShareResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cs3.ocmshareproviderv0alpha.GetShareResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cs3.ocmshareproviderv0alpha.GetShareResponse}
 */
proto.cs3.ocmshareproviderv0alpha.GetShareResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new cs3_rpc_status_pb.Status;
      reader.readMessage(value,cs3_rpc_status_pb.Status.deserializeBinaryFromReader);
      msg.setStatus(value);
      break;
    case 2:
      var value = new cs3_types_types_pb.Opaque;
      reader.readMessage(value,cs3_types_types_pb.Opaque.deserializeBinaryFromReader);
      msg.setOpaque(value);
      break;
    case 3:
      var value = new cs3_ocmshareprovider_v0alpha_resources_pb.Share;
      reader.readMessage(value,cs3_ocmshareprovider_v0alpha_resources_pb.Share.deserializeBinaryFromReader);
      msg.setShare(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cs3.ocmshareproviderv0alpha.GetShareResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cs3.ocmshareproviderv0alpha.GetShareResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cs3.ocmshareproviderv0alpha.GetShareResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cs3.ocmshareproviderv0alpha.GetShareResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      cs3_rpc_status_pb.Status.serializeBinaryToWriter
    );
  }
  f = message.getOpaque();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      cs3_types_types_pb.Opaque.serializeBinaryToWriter
    );
  }
  f = message.getShare();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      cs3_ocmshareprovider_v0alpha_resources_pb.Share.serializeBinaryToWriter
    );
  }
};


/**
 * optional cs3.rpc.Status status = 1;
 * @return {?proto.cs3.rpc.Status}
 */
proto.cs3.ocmshareproviderv0alpha.GetShareResponse.prototype.getStatus = function() {
  return /** @type{?proto.cs3.rpc.Status} */ (
    jspb.Message.getWrapperField(this, cs3_rpc_status_pb.Status, 1));
};


/** @param {?proto.cs3.rpc.Status|undefined} value */
proto.cs3.ocmshareproviderv0alpha.GetShareResponse.prototype.setStatus = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.cs3.ocmshareproviderv0alpha.GetShareResponse.prototype.clearStatus = function() {
  this.setStatus(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cs3.ocmshareproviderv0alpha.GetShareResponse.prototype.hasStatus = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional cs3.types.Opaque opaque = 2;
 * @return {?proto.cs3.types.Opaque}
 */
proto.cs3.ocmshareproviderv0alpha.GetShareResponse.prototype.getOpaque = function() {
  return /** @type{?proto.cs3.types.Opaque} */ (
    jspb.Message.getWrapperField(this, cs3_types_types_pb.Opaque, 2));
};


/** @param {?proto.cs3.types.Opaque|undefined} value */
proto.cs3.ocmshareproviderv0alpha.GetShareResponse.prototype.setOpaque = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.cs3.ocmshareproviderv0alpha.GetShareResponse.prototype.clearOpaque = function() {
  this.setOpaque(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cs3.ocmshareproviderv0alpha.GetShareResponse.prototype.hasOpaque = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional Share share = 3;
 * @return {?proto.cs3.ocmshareproviderv0alpha.Share}
 */
proto.cs3.ocmshareproviderv0alpha.GetShareResponse.prototype.getShare = function() {
  return /** @type{?proto.cs3.ocmshareproviderv0alpha.Share} */ (
    jspb.Message.getWrapperField(this, cs3_ocmshareprovider_v0alpha_resources_pb.Share, 3));
};


/** @param {?proto.cs3.ocmshareproviderv0alpha.Share|undefined} value */
proto.cs3.ocmshareproviderv0alpha.GetShareResponse.prototype.setShare = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.cs3.ocmshareproviderv0alpha.GetShareResponse.prototype.clearShare = function() {
  this.setShare(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cs3.ocmshareproviderv0alpha.GetShareResponse.prototype.hasShare = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cs3.ocmshareproviderv0alpha.ListReceivedSharesRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cs3.ocmshareproviderv0alpha.ListReceivedSharesRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cs3.ocmshareproviderv0alpha.ListReceivedSharesRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cs3.ocmshareproviderv0alpha.ListReceivedSharesRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    opaque: (f = msg.getOpaque()) && cs3_types_types_pb.Opaque.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cs3.ocmshareproviderv0alpha.ListReceivedSharesRequest}
 */
proto.cs3.ocmshareproviderv0alpha.ListReceivedSharesRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cs3.ocmshareproviderv0alpha.ListReceivedSharesRequest;
  return proto.cs3.ocmshareproviderv0alpha.ListReceivedSharesRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cs3.ocmshareproviderv0alpha.ListReceivedSharesRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cs3.ocmshareproviderv0alpha.ListReceivedSharesRequest}
 */
proto.cs3.ocmshareproviderv0alpha.ListReceivedSharesRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new cs3_types_types_pb.Opaque;
      reader.readMessage(value,cs3_types_types_pb.Opaque.deserializeBinaryFromReader);
      msg.setOpaque(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cs3.ocmshareproviderv0alpha.ListReceivedSharesRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cs3.ocmshareproviderv0alpha.ListReceivedSharesRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cs3.ocmshareproviderv0alpha.ListReceivedSharesRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cs3.ocmshareproviderv0alpha.ListReceivedSharesRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOpaque();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      cs3_types_types_pb.Opaque.serializeBinaryToWriter
    );
  }
};


/**
 * optional cs3.types.Opaque opaque = 1;
 * @return {?proto.cs3.types.Opaque}
 */
proto.cs3.ocmshareproviderv0alpha.ListReceivedSharesRequest.prototype.getOpaque = function() {
  return /** @type{?proto.cs3.types.Opaque} */ (
    jspb.Message.getWrapperField(this, cs3_types_types_pb.Opaque, 1));
};


/** @param {?proto.cs3.types.Opaque|undefined} value */
proto.cs3.ocmshareproviderv0alpha.ListReceivedSharesRequest.prototype.setOpaque = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.cs3.ocmshareproviderv0alpha.ListReceivedSharesRequest.prototype.clearOpaque = function() {
  this.setOpaque(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cs3.ocmshareproviderv0alpha.ListReceivedSharesRequest.prototype.hasOpaque = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cs3.ocmshareproviderv0alpha.ListReceivedSharesResponse.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cs3.ocmshareproviderv0alpha.ListReceivedSharesResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.cs3.ocmshareproviderv0alpha.ListReceivedSharesResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cs3.ocmshareproviderv0alpha.ListReceivedSharesResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cs3.ocmshareproviderv0alpha.ListReceivedSharesResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: (f = msg.getStatus()) && cs3_rpc_status_pb.Status.toObject(includeInstance, f),
    opaque: (f = msg.getOpaque()) && cs3_types_types_pb.Opaque.toObject(includeInstance, f),
    sharesList: jspb.Message.toObjectList(msg.getSharesList(),
    cs3_ocmshareprovider_v0alpha_resources_pb.ReceivedShare.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cs3.ocmshareproviderv0alpha.ListReceivedSharesResponse}
 */
proto.cs3.ocmshareproviderv0alpha.ListReceivedSharesResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cs3.ocmshareproviderv0alpha.ListReceivedSharesResponse;
  return proto.cs3.ocmshareproviderv0alpha.ListReceivedSharesResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cs3.ocmshareproviderv0alpha.ListReceivedSharesResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cs3.ocmshareproviderv0alpha.ListReceivedSharesResponse}
 */
proto.cs3.ocmshareproviderv0alpha.ListReceivedSharesResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new cs3_rpc_status_pb.Status;
      reader.readMessage(value,cs3_rpc_status_pb.Status.deserializeBinaryFromReader);
      msg.setStatus(value);
      break;
    case 2:
      var value = new cs3_types_types_pb.Opaque;
      reader.readMessage(value,cs3_types_types_pb.Opaque.deserializeBinaryFromReader);
      msg.setOpaque(value);
      break;
    case 3:
      var value = new cs3_ocmshareprovider_v0alpha_resources_pb.ReceivedShare;
      reader.readMessage(value,cs3_ocmshareprovider_v0alpha_resources_pb.ReceivedShare.deserializeBinaryFromReader);
      msg.addShares(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cs3.ocmshareproviderv0alpha.ListReceivedSharesResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cs3.ocmshareproviderv0alpha.ListReceivedSharesResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cs3.ocmshareproviderv0alpha.ListReceivedSharesResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cs3.ocmshareproviderv0alpha.ListReceivedSharesResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      cs3_rpc_status_pb.Status.serializeBinaryToWriter
    );
  }
  f = message.getOpaque();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      cs3_types_types_pb.Opaque.serializeBinaryToWriter
    );
  }
  f = message.getSharesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      cs3_ocmshareprovider_v0alpha_resources_pb.ReceivedShare.serializeBinaryToWriter
    );
  }
};


/**
 * optional cs3.rpc.Status status = 1;
 * @return {?proto.cs3.rpc.Status}
 */
proto.cs3.ocmshareproviderv0alpha.ListReceivedSharesResponse.prototype.getStatus = function() {
  return /** @type{?proto.cs3.rpc.Status} */ (
    jspb.Message.getWrapperField(this, cs3_rpc_status_pb.Status, 1));
};


/** @param {?proto.cs3.rpc.Status|undefined} value */
proto.cs3.ocmshareproviderv0alpha.ListReceivedSharesResponse.prototype.setStatus = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.cs3.ocmshareproviderv0alpha.ListReceivedSharesResponse.prototype.clearStatus = function() {
  this.setStatus(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cs3.ocmshareproviderv0alpha.ListReceivedSharesResponse.prototype.hasStatus = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional cs3.types.Opaque opaque = 2;
 * @return {?proto.cs3.types.Opaque}
 */
proto.cs3.ocmshareproviderv0alpha.ListReceivedSharesResponse.prototype.getOpaque = function() {
  return /** @type{?proto.cs3.types.Opaque} */ (
    jspb.Message.getWrapperField(this, cs3_types_types_pb.Opaque, 2));
};


/** @param {?proto.cs3.types.Opaque|undefined} value */
proto.cs3.ocmshareproviderv0alpha.ListReceivedSharesResponse.prototype.setOpaque = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.cs3.ocmshareproviderv0alpha.ListReceivedSharesResponse.prototype.clearOpaque = function() {
  this.setOpaque(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cs3.ocmshareproviderv0alpha.ListReceivedSharesResponse.prototype.hasOpaque = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * repeated ReceivedShare shares = 3;
 * @return {!Array<!proto.cs3.ocmshareproviderv0alpha.ReceivedShare>}
 */
proto.cs3.ocmshareproviderv0alpha.ListReceivedSharesResponse.prototype.getSharesList = function() {
  return /** @type{!Array<!proto.cs3.ocmshareproviderv0alpha.ReceivedShare>} */ (
    jspb.Message.getRepeatedWrapperField(this, cs3_ocmshareprovider_v0alpha_resources_pb.ReceivedShare, 3));
};


/** @param {!Array<!proto.cs3.ocmshareproviderv0alpha.ReceivedShare>} value */
proto.cs3.ocmshareproviderv0alpha.ListReceivedSharesResponse.prototype.setSharesList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.cs3.ocmshareproviderv0alpha.ReceivedShare=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cs3.ocmshareproviderv0alpha.ReceivedShare}
 */
proto.cs3.ocmshareproviderv0alpha.ListReceivedSharesResponse.prototype.addShares = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.cs3.ocmshareproviderv0alpha.ReceivedShare, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.cs3.ocmshareproviderv0alpha.ListReceivedSharesResponse.prototype.clearSharesList = function() {
  this.setSharesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cs3.ocmshareproviderv0alpha.UpdateReceivedShareRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cs3.ocmshareproviderv0alpha.UpdateReceivedShareRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cs3.ocmshareproviderv0alpha.UpdateReceivedShareRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cs3.ocmshareproviderv0alpha.UpdateReceivedShareRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    opaque: (f = msg.getOpaque()) && cs3_types_types_pb.Opaque.toObject(includeInstance, f),
    ref: (f = msg.getRef()) && cs3_ocmshareprovider_v0alpha_resources_pb.ShareReference.toObject(includeInstance, f),
    field: (f = msg.getField()) && proto.cs3.ocmshareproviderv0alpha.UpdateReceivedShareRequest.UpdateField.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cs3.ocmshareproviderv0alpha.UpdateReceivedShareRequest}
 */
proto.cs3.ocmshareproviderv0alpha.UpdateReceivedShareRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cs3.ocmshareproviderv0alpha.UpdateReceivedShareRequest;
  return proto.cs3.ocmshareproviderv0alpha.UpdateReceivedShareRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cs3.ocmshareproviderv0alpha.UpdateReceivedShareRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cs3.ocmshareproviderv0alpha.UpdateReceivedShareRequest}
 */
proto.cs3.ocmshareproviderv0alpha.UpdateReceivedShareRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new cs3_types_types_pb.Opaque;
      reader.readMessage(value,cs3_types_types_pb.Opaque.deserializeBinaryFromReader);
      msg.setOpaque(value);
      break;
    case 2:
      var value = new cs3_ocmshareprovider_v0alpha_resources_pb.ShareReference;
      reader.readMessage(value,cs3_ocmshareprovider_v0alpha_resources_pb.ShareReference.deserializeBinaryFromReader);
      msg.setRef(value);
      break;
    case 3:
      var value = new proto.cs3.ocmshareproviderv0alpha.UpdateReceivedShareRequest.UpdateField;
      reader.readMessage(value,proto.cs3.ocmshareproviderv0alpha.UpdateReceivedShareRequest.UpdateField.deserializeBinaryFromReader);
      msg.setField(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cs3.ocmshareproviderv0alpha.UpdateReceivedShareRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cs3.ocmshareproviderv0alpha.UpdateReceivedShareRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cs3.ocmshareproviderv0alpha.UpdateReceivedShareRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cs3.ocmshareproviderv0alpha.UpdateReceivedShareRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOpaque();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      cs3_types_types_pb.Opaque.serializeBinaryToWriter
    );
  }
  f = message.getRef();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      cs3_ocmshareprovider_v0alpha_resources_pb.ShareReference.serializeBinaryToWriter
    );
  }
  f = message.getField();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.cs3.ocmshareproviderv0alpha.UpdateReceivedShareRequest.UpdateField.serializeBinaryToWriter
    );
  }
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.cs3.ocmshareproviderv0alpha.UpdateReceivedShareRequest.UpdateField.oneofGroups_ = [[1,2]];

/**
 * @enum {number}
 */
proto.cs3.ocmshareproviderv0alpha.UpdateReceivedShareRequest.UpdateField.FieldCase = {
  FIELD_NOT_SET: 0,
  DISPLAY_NAME: 1,
  STATE: 2
};

/**
 * @return {proto.cs3.ocmshareproviderv0alpha.UpdateReceivedShareRequest.UpdateField.FieldCase}
 */
proto.cs3.ocmshareproviderv0alpha.UpdateReceivedShareRequest.UpdateField.prototype.getFieldCase = function() {
  return /** @type {proto.cs3.ocmshareproviderv0alpha.UpdateReceivedShareRequest.UpdateField.FieldCase} */(jspb.Message.computeOneofCase(this, proto.cs3.ocmshareproviderv0alpha.UpdateReceivedShareRequest.UpdateField.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cs3.ocmshareproviderv0alpha.UpdateReceivedShareRequest.UpdateField.prototype.toObject = function(opt_includeInstance) {
  return proto.cs3.ocmshareproviderv0alpha.UpdateReceivedShareRequest.UpdateField.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cs3.ocmshareproviderv0alpha.UpdateReceivedShareRequest.UpdateField} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cs3.ocmshareproviderv0alpha.UpdateReceivedShareRequest.UpdateField.toObject = function(includeInstance, msg) {
  var f, obj = {
    displayName: jspb.Message.getFieldWithDefault(msg, 1, ""),
    state: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cs3.ocmshareproviderv0alpha.UpdateReceivedShareRequest.UpdateField}
 */
proto.cs3.ocmshareproviderv0alpha.UpdateReceivedShareRequest.UpdateField.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cs3.ocmshareproviderv0alpha.UpdateReceivedShareRequest.UpdateField;
  return proto.cs3.ocmshareproviderv0alpha.UpdateReceivedShareRequest.UpdateField.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cs3.ocmshareproviderv0alpha.UpdateReceivedShareRequest.UpdateField} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cs3.ocmshareproviderv0alpha.UpdateReceivedShareRequest.UpdateField}
 */
proto.cs3.ocmshareproviderv0alpha.UpdateReceivedShareRequest.UpdateField.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDisplayName(value);
      break;
    case 2:
      var value = /** @type {!proto.cs3.ocmshareproviderv0alpha.ShareState} */ (reader.readEnum());
      msg.setState(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cs3.ocmshareproviderv0alpha.UpdateReceivedShareRequest.UpdateField.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cs3.ocmshareproviderv0alpha.UpdateReceivedShareRequest.UpdateField.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cs3.ocmshareproviderv0alpha.UpdateReceivedShareRequest.UpdateField} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cs3.ocmshareproviderv0alpha.UpdateReceivedShareRequest.UpdateField.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {!proto.cs3.ocmshareproviderv0alpha.ShareState} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeEnum(
      2,
      f
    );
  }
};


/**
 * optional string display_name = 1;
 * @return {string}
 */
proto.cs3.ocmshareproviderv0alpha.UpdateReceivedShareRequest.UpdateField.prototype.getDisplayName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.cs3.ocmshareproviderv0alpha.UpdateReceivedShareRequest.UpdateField.prototype.setDisplayName = function(value) {
  jspb.Message.setOneofField(this, 1, proto.cs3.ocmshareproviderv0alpha.UpdateReceivedShareRequest.UpdateField.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 */
proto.cs3.ocmshareproviderv0alpha.UpdateReceivedShareRequest.UpdateField.prototype.clearDisplayName = function() {
  jspb.Message.setOneofField(this, 1, proto.cs3.ocmshareproviderv0alpha.UpdateReceivedShareRequest.UpdateField.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cs3.ocmshareproviderv0alpha.UpdateReceivedShareRequest.UpdateField.prototype.hasDisplayName = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional ShareState state = 2;
 * @return {!proto.cs3.ocmshareproviderv0alpha.ShareState}
 */
proto.cs3.ocmshareproviderv0alpha.UpdateReceivedShareRequest.UpdateField.prototype.getState = function() {
  return /** @type {!proto.cs3.ocmshareproviderv0alpha.ShareState} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {!proto.cs3.ocmshareproviderv0alpha.ShareState} value */
proto.cs3.ocmshareproviderv0alpha.UpdateReceivedShareRequest.UpdateField.prototype.setState = function(value) {
  jspb.Message.setOneofField(this, 2, proto.cs3.ocmshareproviderv0alpha.UpdateReceivedShareRequest.UpdateField.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 */
proto.cs3.ocmshareproviderv0alpha.UpdateReceivedShareRequest.UpdateField.prototype.clearState = function() {
  jspb.Message.setOneofField(this, 2, proto.cs3.ocmshareproviderv0alpha.UpdateReceivedShareRequest.UpdateField.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cs3.ocmshareproviderv0alpha.UpdateReceivedShareRequest.UpdateField.prototype.hasState = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional cs3.types.Opaque opaque = 1;
 * @return {?proto.cs3.types.Opaque}
 */
proto.cs3.ocmshareproviderv0alpha.UpdateReceivedShareRequest.prototype.getOpaque = function() {
  return /** @type{?proto.cs3.types.Opaque} */ (
    jspb.Message.getWrapperField(this, cs3_types_types_pb.Opaque, 1));
};


/** @param {?proto.cs3.types.Opaque|undefined} value */
proto.cs3.ocmshareproviderv0alpha.UpdateReceivedShareRequest.prototype.setOpaque = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.cs3.ocmshareproviderv0alpha.UpdateReceivedShareRequest.prototype.clearOpaque = function() {
  this.setOpaque(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cs3.ocmshareproviderv0alpha.UpdateReceivedShareRequest.prototype.hasOpaque = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional ShareReference ref = 2;
 * @return {?proto.cs3.ocmshareproviderv0alpha.ShareReference}
 */
proto.cs3.ocmshareproviderv0alpha.UpdateReceivedShareRequest.prototype.getRef = function() {
  return /** @type{?proto.cs3.ocmshareproviderv0alpha.ShareReference} */ (
    jspb.Message.getWrapperField(this, cs3_ocmshareprovider_v0alpha_resources_pb.ShareReference, 2));
};


/** @param {?proto.cs3.ocmshareproviderv0alpha.ShareReference|undefined} value */
proto.cs3.ocmshareproviderv0alpha.UpdateReceivedShareRequest.prototype.setRef = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.cs3.ocmshareproviderv0alpha.UpdateReceivedShareRequest.prototype.clearRef = function() {
  this.setRef(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cs3.ocmshareproviderv0alpha.UpdateReceivedShareRequest.prototype.hasRef = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional UpdateField field = 3;
 * @return {?proto.cs3.ocmshareproviderv0alpha.UpdateReceivedShareRequest.UpdateField}
 */
proto.cs3.ocmshareproviderv0alpha.UpdateReceivedShareRequest.prototype.getField = function() {
  return /** @type{?proto.cs3.ocmshareproviderv0alpha.UpdateReceivedShareRequest.UpdateField} */ (
    jspb.Message.getWrapperField(this, proto.cs3.ocmshareproviderv0alpha.UpdateReceivedShareRequest.UpdateField, 3));
};


/** @param {?proto.cs3.ocmshareproviderv0alpha.UpdateReceivedShareRequest.UpdateField|undefined} value */
proto.cs3.ocmshareproviderv0alpha.UpdateReceivedShareRequest.prototype.setField = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.cs3.ocmshareproviderv0alpha.UpdateReceivedShareRequest.prototype.clearField = function() {
  this.setField(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cs3.ocmshareproviderv0alpha.UpdateReceivedShareRequest.prototype.hasField = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cs3.ocmshareproviderv0alpha.UpdateReceivedShareResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.cs3.ocmshareproviderv0alpha.UpdateReceivedShareResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cs3.ocmshareproviderv0alpha.UpdateReceivedShareResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cs3.ocmshareproviderv0alpha.UpdateReceivedShareResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: (f = msg.getStatus()) && cs3_rpc_status_pb.Status.toObject(includeInstance, f),
    opaque: (f = msg.getOpaque()) && cs3_types_types_pb.Opaque.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cs3.ocmshareproviderv0alpha.UpdateReceivedShareResponse}
 */
proto.cs3.ocmshareproviderv0alpha.UpdateReceivedShareResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cs3.ocmshareproviderv0alpha.UpdateReceivedShareResponse;
  return proto.cs3.ocmshareproviderv0alpha.UpdateReceivedShareResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cs3.ocmshareproviderv0alpha.UpdateReceivedShareResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cs3.ocmshareproviderv0alpha.UpdateReceivedShareResponse}
 */
proto.cs3.ocmshareproviderv0alpha.UpdateReceivedShareResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new cs3_rpc_status_pb.Status;
      reader.readMessage(value,cs3_rpc_status_pb.Status.deserializeBinaryFromReader);
      msg.setStatus(value);
      break;
    case 2:
      var value = new cs3_types_types_pb.Opaque;
      reader.readMessage(value,cs3_types_types_pb.Opaque.deserializeBinaryFromReader);
      msg.setOpaque(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cs3.ocmshareproviderv0alpha.UpdateReceivedShareResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cs3.ocmshareproviderv0alpha.UpdateReceivedShareResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cs3.ocmshareproviderv0alpha.UpdateReceivedShareResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cs3.ocmshareproviderv0alpha.UpdateReceivedShareResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      cs3_rpc_status_pb.Status.serializeBinaryToWriter
    );
  }
  f = message.getOpaque();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      cs3_types_types_pb.Opaque.serializeBinaryToWriter
    );
  }
};


/**
 * optional cs3.rpc.Status status = 1;
 * @return {?proto.cs3.rpc.Status}
 */
proto.cs3.ocmshareproviderv0alpha.UpdateReceivedShareResponse.prototype.getStatus = function() {
  return /** @type{?proto.cs3.rpc.Status} */ (
    jspb.Message.getWrapperField(this, cs3_rpc_status_pb.Status, 1));
};


/** @param {?proto.cs3.rpc.Status|undefined} value */
proto.cs3.ocmshareproviderv0alpha.UpdateReceivedShareResponse.prototype.setStatus = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.cs3.ocmshareproviderv0alpha.UpdateReceivedShareResponse.prototype.clearStatus = function() {
  this.setStatus(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cs3.ocmshareproviderv0alpha.UpdateReceivedShareResponse.prototype.hasStatus = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional cs3.types.Opaque opaque = 2;
 * @return {?proto.cs3.types.Opaque}
 */
proto.cs3.ocmshareproviderv0alpha.UpdateReceivedShareResponse.prototype.getOpaque = function() {
  return /** @type{?proto.cs3.types.Opaque} */ (
    jspb.Message.getWrapperField(this, cs3_types_types_pb.Opaque, 2));
};


/** @param {?proto.cs3.types.Opaque|undefined} value */
proto.cs3.ocmshareproviderv0alpha.UpdateReceivedShareResponse.prototype.setOpaque = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.cs3.ocmshareproviderv0alpha.UpdateReceivedShareResponse.prototype.clearOpaque = function() {
  this.setOpaque(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cs3.ocmshareproviderv0alpha.UpdateReceivedShareResponse.prototype.hasOpaque = function() {
  return jspb.Message.getField(this, 2) != null;
};


goog.object.extend(exports, proto.cs3.ocmshareproviderv0alpha);
